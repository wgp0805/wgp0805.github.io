<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Liunx常用命令</title>
    <link href="/2022/05/29/Liunx%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <url>/2022/05/29/Liunx%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
    
    <content type="html"><![CDATA[<h1 id="Liunx命令"><a href="#Liunx命令" class="headerlink" title="Liunx命令"></a>Liunx命令</h1><h3 id="目录说明"><a href="#目录说明" class="headerlink" title="目录说明"></a>目录说明</h3><figure class="highlight erlang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs erlang"><span class="hljs-function"><span class="hljs-title">bin</span>  <span class="hljs-params">(binaries)</span>存放二进制可执行文件 </span><br><span class="hljs-function"><span class="hljs-title">sbin</span>  <span class="hljs-params">(super user binaries)</span>存放二进制可执行文件，只有<span class="hljs-title">root</span>才能访问 </span><br><span class="hljs-function"><span class="hljs-title">etc</span> <span class="hljs-params">(etcetera)</span>存放系统配置文件 </span><br><span class="hljs-function"><span class="hljs-title">usr</span>  <span class="hljs-params">(unix shared resources)</span>用于存放共享的系统资源 </span><br><span class="hljs-function"><span class="hljs-title">home</span> 存放用户文件的根目录 </span><br><span class="hljs-function"><span class="hljs-title">root</span>  超级用户目录 </span><br><span class="hljs-function"><span class="hljs-title">dev</span> <span class="hljs-params">(devices)</span>用于存放设备文件 </span><br><span class="hljs-function"><span class="hljs-title">lib</span>  <span class="hljs-params">(library)</span>存放跟文件系统中的程序运行所需要的共享库及内核模块 </span><br><span class="hljs-function"><span class="hljs-title">mnt</span>  <span class="hljs-params">(mount)</span>系统管理员安装临时文件系统的安装点 </span><br><span class="hljs-function"><span class="hljs-title">boot</span> 存放用于系统引导时使用的各种文件 </span><br><span class="hljs-function"><span class="hljs-title">tmp</span>  <span class="hljs-params">(temporary)</span>用于存放各种临时文件 </span><br><span class="hljs-function"><span class="hljs-title">var</span>  <span class="hljs-params">(variable)</span>用于存放运行时需要改变数据的文件 </span><br><span class="hljs-function"></span><br></code></pre></td></tr></table></figure><h3 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">ls</span> : 查看当前文件夹下的目录<br><span class="hljs-built_in">pwd</span>: 查看当前所处的目录<br>ip addr ：ip地址 <br><span class="hljs-built_in">cd</span>: 进入文件夹<br><span class="hljs-built_in">touch</span>: 创建文件<br><span class="hljs-built_in">mkdir</span>: 创建文件夹<br>clear : 清屏   快捷键 Ctrl+L<br><br><span class="hljs-built_in">command</span>  [-options]  [parameter1] ：命令格式<br><span class="hljs-built_in">ls</span> /: 显示根目录文件<br><span class="hljs-built_in">ls</span>  -a : 显示全部文件<br>-l ：显示文件列表<br>-h ：显示文件大小<br>-a -l -h<br>-alh<br>xx --<span class="hljs-built_in">help</span>: 查看帮助<br>tab: 自动补全<br><span class="hljs-built_in">cat</span> : 查看文件内容<br><span class="hljs-built_in">history</span>： 历史命令<br><span class="hljs-built_in">ls</span> 2*/?/[x,x,x,x,x] : 通配符<br><span class="hljs-built_in">ls</span> &gt;/&gt;&gt; xxx.txt : 重定向保存内容，&gt;覆盖  &gt;&gt;追加<br>more xx.txt : 分页     空格:下一页 B:上一页<br><span class="hljs-built_in">ls</span> -alh / | more ：管道<br><span class="hljs-built_in">cd</span>.. : 返回上级目录<br><span class="hljs-built_in">cd</span> - : 后退<br><span class="hljs-built_in">cd</span> ~ ：家目录<br>tree : 查看目录结构树<br><span class="hljs-built_in">mkdir</span> A/B/C/D -p : 层级创建目录<br><span class="hljs-built_in">rmdir</span> 目录：删除目录（空）<br><span class="hljs-built_in">rm</span> 文件：删除文件<br><span class="hljs-built_in">rm</span> 目录 -r : 删除目录（任意）<br><span class="hljs-built_in">ln</span> -s 源文件 新文件： 软连接<br><span class="hljs-built_in">ln</span> 源文件 新文件 ： 硬链接<br>grep [-选项] ‘搜索内容串’ 文件名 ：搜索<br><span class="hljs-built_in">mv</span> 源文件 新文件：重命名<br><span class="hljs-built_in">mv</span> 源文件 目录/：移动文件<br><br><span class="hljs-built_in">cp</span> 源文件 目录/ -r：拷贝文件<br><br></code></pre></td></tr></table></figure><h2 id="压缩命令"><a href="#压缩命令" class="headerlink" title="压缩命令"></a>压缩命令</h2><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs stylus">tar -cvf 压缩包名称<span class="hljs-selector-class">.tar</span> *<span class="hljs-selector-class">.txt</span>   : 打包*<span class="hljs-selector-class">.txt</span><br>tar -xvf 压缩包名称<span class="hljs-selector-class">.tar</span>         : 解包*<span class="hljs-selector-class">.txt</span><br><br>tar -zcvf 压缩包名称<span class="hljs-selector-class">.tar</span><span class="hljs-selector-class">.gz</span> *<span class="hljs-selector-class">.txt</span> : 打包并压缩*<span class="hljs-selector-class">.txt</span><br>tar -zxvf 压缩包名称<span class="hljs-selector-class">.tar</span><span class="hljs-selector-class">.gz</span>       : 解包*<span class="hljs-selector-class">.txt</span><br><br>tar -jcvf 压缩包名称<span class="hljs-selector-class">.tar</span><span class="hljs-selector-class">.bz2</span> *<span class="hljs-selector-class">.txt</span> : 打包*<span class="hljs-selector-class">.txt</span><br>tar -jxvf 压缩包名称<span class="hljs-selector-class">.tar</span><span class="hljs-selector-class">.bz2</span>    : 解包*.txt<br></code></pre></td></tr></table></figure><h3 id="用户权限"><a href="#用户权限" class="headerlink" title="用户权限"></a>用户权限</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs awk">用户：<br>whoami ：查看当前用户<br>sudo useradd zhangsan -m : 添加账户<br>sudo passwd zhangsan  : 添加账户密码<br>su 账户: 切换用户<br><span class="hljs-keyword">exit</span> : 切换回之前的账户<br>sudo userdel -r zhangsan ：删除账户<br>sudo usermod zhangsan -a -G adm   ：添加sudo权限<br><br>sudo usermod zhangsan -a -G sudo  ：添加sudo权限<br><br>权限：<br>chmod u<span class="hljs-regexp">/g/</span>o<span class="hljs-regexp">/a +/</span>-/=rwx ：修改文件的权限（字母法）<br>chmod <span class="hljs-number">777</span> <span class="hljs-number">11</span>.txt ： 修改文件的权限（数字法）<br></code></pre></td></tr></table></figure><h3 id="防火墙"><a href="#防火墙" class="headerlink" title="防火墙"></a>防火墙</h3><figure class="highlight dsconfig"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs dsconfig">防火墙操作<br>启动：<span class="hljs-string">systemctl</span> <span class="hljs-string">start</span> <span class="hljs-string">firewalld</span><br>停止：<span class="hljs-string">systemctl</span> <span class="hljs-string">stop</span> <span class="hljs-string">firewalld</span><br>重启：<span class="hljs-string">systemctl</span> <span class="hljs-string">restart</span> <span class="hljs-string">firewalld</span>.<span class="hljs-string">service</span><br>查看状态：<span class="hljs-string">systemctl</span> <span class="hljs-string">status</span> <span class="hljs-string">firewalld</span><br>开机启动：<span class="hljs-string">systemctl</span> <span class="hljs-string">enable</span> <span class="hljs-string">firewalld</span>.<span class="hljs-string">service</span><br>开机禁用：<span class="hljs-string">systemctl</span> <span class="hljs-string">disable</span> <span class="hljs-string">firewalld</span><br>查看服务是否开机启动：<span class="hljs-string">systemctl</span> <span class="hljs-string">is-enabled</span> <span class="hljs-string">firewalld</span>.<span class="hljs-string">service</span><br>查看已启动的服务列表：<span class="hljs-string">systemctl</span> <span class="hljs-built_in">list-unit-files|grep</span> <span class="hljs-string">enabled</span><br>查看启动失败的服务列表：<span class="hljs-string">systemctl</span> <span class="hljs-built_in">--failed</span><br>查看版本：<span class="hljs-string">firewall-cmd</span> <span class="hljs-built_in">--version</span><br>查看帮助：<span class="hljs-string">firewall-cmd</span> <span class="hljs-built_in">--help</span><br>显示状态：<span class="hljs-string">firewall-cmd</span> <span class="hljs-built_in">--state</span><br>查看所有打开的端口：<span class="hljs-string">firewall-cmd</span> <span class="hljs-built_in">--zone=public</span> <span class="hljs-built_in">--list-ports</span><br>更新防火墙规则：<span class="hljs-string">firewall-cmd</span> <span class="hljs-built_in">--reload</span><br>查看区域信息:<span class="hljs-string">firewall-cmd</span> <span class="hljs-built_in">--get-active-zones</span><br>查看指定接口所属区域：<span class="hljs-string">firewall-cmd</span> <span class="hljs-built_in">--get-zone-of-interface=eth0</span><br>拒绝所有包：<span class="hljs-string">firewall-cmd</span> <span class="hljs-built_in">--panic-on</span><br>取消拒绝状态：<span class="hljs-string">firewall-cmd</span> <span class="hljs-built_in">--panic-off</span><br>查看是否拒绝：<span class="hljs-string">firewall-cmd</span> <span class="hljs-built_in">--query-panic</span><br>开放<span class="hljs-string">80</span>端口：<span class="hljs-string">firewall-cmd</span> <span class="hljs-built_in">--zone=public</span> <span class="hljs-built_in">--add-port=80/tcp</span> <span class="hljs-built_in">--permanent</span> （<span class="hljs-built_in">--permanent永久生效，没有此参数重启后失效）</span><br>查看<span class="hljs-string">80</span>端口：<span class="hljs-string">firewall-cmd</span> <span class="hljs-built_in">--zone=public</span> <span class="hljs-built_in">--query-port=80/tcp</span><br>删除<span class="hljs-string">80</span>端口：<span class="hljs-string">firewall-cmd</span> <span class="hljs-built_in">--zone=public</span> <span class="hljs-built_in">--remove-port=80/tcp</span> <span class="hljs-built_in">--permanent</span><br>开放端口区间：<span class="hljs-string">firewall-cmd</span> <span class="hljs-built_in">--permanent</span> <span class="hljs-built_in">--zone=public</span> <span class="hljs-built_in">--add-port=8080-9999/tcp</span> //永久<br>重新载入使配置立即生效：<span class="hljs-string">firewall-cmd</span> <span class="hljs-built_in">--reload</span><br></code></pre></td></tr></table></figure><h2 id="zookeeper"><a href="#zookeeper" class="headerlink" title="zookeeper"></a>zookeeper</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs java">服务管理命令：<br>zkServer.sh start|stop|restart|status<br><br>客户端连接：<br>zkCli.sh -server $&#123;ip&#125;:$&#123;port&#125;<br><br>客户端关闭：<br>quit 或者按 Ctrl + C<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>liunx</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>httpUtils</title>
    <link href="/2022/05/29/httpUtils/"/>
    <url>/2022/05/29/httpUtils/</url>
    
    <content type="html"><![CDATA[<p>由于之前在写项目的时候都是用的Jfinal里边自带的httpkit的工具，但是之前有一次在使用这个工具的时间发现这个工具没法对链接超时时间进行设置，后来去官网上找当时就没有设计这一块，然后发现品论里边有个小哥把这个工具重写了下，发现用的都是java自己的包，并没有依赖外部的东西，感觉还是不错的，现在距离下来方便以后使用</p><div class="note note-success">            <p>HttpUtils </p>          </div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br></pre></td><td class="code"><pre><code class="hljs java"><br><span class="hljs-keyword">import</span> java.io.ByteArrayOutputStream;<br><span class="hljs-keyword">import</span> java.io.DataOutputStream;<br><span class="hljs-keyword">import</span> java.io.InputStream;<br><span class="hljs-keyword">import</span> java.io.UnsupportedEncodingException;<br><span class="hljs-keyword">import</span> java.net.HttpURLConnection;<br><span class="hljs-keyword">import</span> java.net.URL;<br><span class="hljs-keyword">import</span> java.net.URLEncoder;<br><span class="hljs-keyword">import</span> java.security.cert.X509Certificate;<br><span class="hljs-keyword">import</span> java.util.Map;<br><span class="hljs-keyword">import</span> java.util.regex.Matcher;<br><span class="hljs-keyword">import</span> java.util.regex.Pattern;<br><br><span class="hljs-keyword">import</span> javax.net.ssl.HostnameVerifier;<br><span class="hljs-keyword">import</span> javax.net.ssl.HttpsURLConnection;<br><span class="hljs-keyword">import</span> javax.net.ssl.SSLContext;<br><span class="hljs-keyword">import</span> javax.net.ssl.SSLSession;<br><span class="hljs-keyword">import</span> javax.net.ssl.SSLSocketFactory;<br><span class="hljs-keyword">import</span> javax.net.ssl.TrustManager;<br><span class="hljs-keyword">import</span> javax.net.ssl.X509TrustManager;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">HttpUtils</span> &#123;<br><br><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">String</span> <span class="hljs-variable">TAG</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;HttpHandler&quot;</span>;<br><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">int</span> <span class="hljs-variable">mReadTimeOut</span> <span class="hljs-operator">=</span> <span class="hljs-number">1000</span> * <span class="hljs-number">10</span>; <span class="hljs-comment">// 10秒</span><br><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">int</span> <span class="hljs-variable">mConnectTimeOut</span> <span class="hljs-operator">=</span> <span class="hljs-number">1000</span> * <span class="hljs-number">5</span>; <span class="hljs-comment">// 5秒</span><br><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">String</span> <span class="hljs-variable">CHAR_SET</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;utf-8&quot;</span>;<br><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">int</span> <span class="hljs-variable">mRetry</span> <span class="hljs-operator">=</span> <span class="hljs-number">2</span>; <span class="hljs-comment">// 默认尝试访问次数</span><br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> String <span class="hljs-title function_">get</span><span class="hljs-params">(String url)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br><span class="hljs-keyword">return</span> get(url, <span class="hljs-literal">null</span>);<br>&#125;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> String <span class="hljs-title function_">get</span><span class="hljs-params">(String url, Map&lt;String, ? extends Object&gt; params)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br><span class="hljs-keyword">return</span> get(url, params, <span class="hljs-literal">null</span>);<br>&#125;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> String <span class="hljs-title function_">get</span><span class="hljs-params">(String url, Map&lt;String, ? extends Object&gt; params, Map&lt;String, String&gt; headers)</span><br><span class="hljs-keyword">throws</span> Exception &#123;<br><span class="hljs-keyword">if</span> (url == <span class="hljs-literal">null</span> || url.trim().length() == <span class="hljs-number">0</span>) &#123;<br><span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Exception</span>(TAG + <span class="hljs-string">&quot;: get url is null or empty!&quot;</span>);<br>&#125;<br><br><span class="hljs-keyword">if</span> (params != <span class="hljs-literal">null</span> &amp;&amp; params.size() &gt; <span class="hljs-number">0</span>) &#123;<br><span class="hljs-keyword">if</span> (!url.contains(<span class="hljs-string">&quot;?&quot;</span>))<br>url += <span class="hljs-string">&quot;?&quot;</span>;<br><br><span class="hljs-type">StringBuilder</span> <span class="hljs-variable">sbContent</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">StringBuilder</span>();<br><span class="hljs-keyword">if</span> (url.charAt(url.length() - <span class="hljs-number">1</span>) == <span class="hljs-string">&#x27;?&#x27;</span>) &#123; <span class="hljs-comment">// 最后一个字符是 ?</span><br><span class="hljs-keyword">for</span> (Map.Entry&lt;String, ? <span class="hljs-keyword">extends</span> <span class="hljs-title class_">Object</span>&gt; entry : params.entrySet()) &#123;<br><span class="hljs-keyword">if</span> (entry.getKey() != <span class="hljs-literal">null</span>)<br>sbContent.append(entry.getKey().trim()).append(<span class="hljs-string">&quot;=&quot;</span>).append(entry.getValue()).append(<span class="hljs-string">&quot;&amp;&quot;</span>);<br>&#125;<br><br><span class="hljs-keyword">if</span> (sbContent.charAt(sbContent.length() - <span class="hljs-number">1</span>) == <span class="hljs-string">&#x27;&amp;&#x27;</span>) &#123;<br>sbContent.deleteCharAt(sbContent.length() - <span class="hljs-number">1</span>);<br>&#125;<br>&#125; <span class="hljs-keyword">else</span> &#123;<br><span class="hljs-keyword">for</span> (Map.Entry&lt;String, ? <span class="hljs-keyword">extends</span> <span class="hljs-title class_">Object</span>&gt; entry : params.entrySet()) &#123;<br><span class="hljs-keyword">if</span> (entry.getKey() != <span class="hljs-literal">null</span>)<br>sbContent.append(<span class="hljs-string">&quot;&amp;&quot;</span>).append(entry.getKey().trim()).append(<span class="hljs-string">&quot;=&quot;</span>).append(entry.getValue());<br>&#125;<br>&#125;<br>url += sbContent.toString();<br>&#125;<br><br><span class="hljs-keyword">return</span> tryToGet(url, headers);<br>&#125;<br><br><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> String <span class="hljs-title function_">tryToGet</span><span class="hljs-params">(String url, Map&lt;String, String&gt; headers)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br><span class="hljs-type">int</span> <span class="hljs-variable">tryTime</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>;<br><span class="hljs-type">Exception</span> <span class="hljs-variable">ex</span> <span class="hljs-operator">=</span> <span class="hljs-literal">null</span>;<br><span class="hljs-keyword">while</span> (tryTime &lt; mRetry) &#123;<br><span class="hljs-keyword">try</span> &#123;<br><span class="hljs-keyword">return</span> doGet(url, headers);<br>&#125; <span class="hljs-keyword">catch</span> (Exception e) &#123;<br><span class="hljs-keyword">if</span> (e != <span class="hljs-literal">null</span>)<br>ex = e;<br>tryTime++;<br>&#125;<br>&#125;<br><span class="hljs-keyword">if</span> (ex != <span class="hljs-literal">null</span>)<br><span class="hljs-keyword">throw</span> ex;<br><span class="hljs-keyword">else</span><br><span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Exception</span>(<span class="hljs-string">&quot;未知网络错误 &quot;</span>);<br>&#125;<br><br><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> String <span class="hljs-title function_">doGet</span><span class="hljs-params">(String strUrl, Map&lt;String, String&gt; headers)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>strUrl = urlEncode(strUrl, CHAR_SET);<br><span class="hljs-type">HttpURLConnection</span> <span class="hljs-variable">connection</span> <span class="hljs-operator">=</span> <span class="hljs-literal">null</span>;<br><span class="hljs-type">InputStream</span> <span class="hljs-variable">stream</span> <span class="hljs-operator">=</span> <span class="hljs-literal">null</span>;<br><span class="hljs-keyword">try</span> &#123;<br><br>connection = getConnection(strUrl);<br>configConnection(connection);<br><span class="hljs-keyword">if</span> (headers != <span class="hljs-literal">null</span> &amp;&amp; headers.size() &gt; <span class="hljs-number">0</span>) &#123;<br><span class="hljs-keyword">for</span> (Map.Entry&lt;String, String&gt; entry : headers.entrySet()) &#123;<br>connection.setRequestProperty(entry.getKey(), entry.getValue());<br>&#125;<br>&#125;<br><br>connection.setInstanceFollowRedirects(<span class="hljs-literal">true</span>);<br>connection.connect();<br><br>stream = connection.getInputStream();<br><span class="hljs-type">ByteArrayOutputStream</span> <span class="hljs-variable">obs</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ByteArrayOutputStream</span>();<br><span class="hljs-type">byte</span>[] buffer = <span class="hljs-keyword">new</span> <span class="hljs-title class_">byte</span>[<span class="hljs-number">1024</span>];<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">len</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; (len = stream.read(buffer)) &gt; <span class="hljs-number">0</span>;) &#123;<br>obs.write(buffer, <span class="hljs-number">0</span>, len);<br>&#125;<br>obs.flush();<br>obs.close();<br>stream.close();<br><br><span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">String</span>(obs.toByteArray());<br>&#125; <span class="hljs-keyword">finally</span> &#123;<br><span class="hljs-keyword">if</span> (connection != <span class="hljs-literal">null</span>) &#123;<br>connection.disconnect();<br>&#125;<br><span class="hljs-keyword">if</span> (stream != <span class="hljs-literal">null</span>) &#123;<br>stream.close();<br>&#125;<br>&#125;<br>&#125;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> String <span class="hljs-title function_">post</span><span class="hljs-params">(String url)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br><span class="hljs-keyword">return</span> post(url, <span class="hljs-literal">null</span>);<br>&#125;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> String <span class="hljs-title function_">post</span><span class="hljs-params">(String url, Map&lt;String, ? extends Object&gt; params)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br><span class="hljs-keyword">return</span> post(url, params, <span class="hljs-literal">null</span>);<br>&#125;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> String <span class="hljs-title function_">post</span><span class="hljs-params">(String url, Map&lt;String, ? extends Object&gt; params, Map&lt;String, String&gt; headers)</span><br><span class="hljs-keyword">throws</span> Exception &#123;<br><span class="hljs-keyword">if</span> (url == <span class="hljs-literal">null</span> || url.trim().length() == <span class="hljs-number">0</span>) &#123;<br><span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Exception</span>(TAG + <span class="hljs-string">&quot;: post url is null or empty!&quot;</span>);<br>&#125;<br><br><span class="hljs-keyword">if</span> (params != <span class="hljs-literal">null</span> &amp;&amp; params.size() &gt; <span class="hljs-number">0</span>) &#123;<br><span class="hljs-type">StringBuilder</span> <span class="hljs-variable">sbContent</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">StringBuilder</span>();<br><span class="hljs-keyword">for</span> (Map.Entry&lt;String, ? <span class="hljs-keyword">extends</span> <span class="hljs-title class_">Object</span>&gt; entry : params.entrySet()) &#123;<br><span class="hljs-keyword">if</span> (entry.getKey() != <span class="hljs-literal">null</span>)<br>sbContent.append(<span class="hljs-string">&quot;&amp;&quot;</span>).append(entry.getKey().trim()).append(<span class="hljs-string">&quot;=&quot;</span>).append(entry.getValue());<br>&#125;<br><span class="hljs-keyword">return</span> tryToPost(url, sbContent.substring(<span class="hljs-number">1</span>), headers);<br><br>&#125; <span class="hljs-keyword">else</span> &#123;<br><span class="hljs-keyword">return</span> tryToPost(url, <span class="hljs-literal">null</span>, headers);<br>&#125;<br>&#125;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> String <span class="hljs-title function_">post</span><span class="hljs-params">(String url, String content, Map&lt;String, String&gt; headers)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br><span class="hljs-keyword">return</span> tryToPost(url, content, headers);<br>&#125;<br><br><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> String <span class="hljs-title function_">tryToPost</span><span class="hljs-params">(String url, String postContent, Map&lt;String, String&gt; headers)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br><span class="hljs-type">int</span> <span class="hljs-variable">tryTime</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>;<br><span class="hljs-type">Exception</span> <span class="hljs-variable">ex</span> <span class="hljs-operator">=</span> <span class="hljs-literal">null</span>;<br><span class="hljs-keyword">while</span> (tryTime &lt; mRetry) &#123;<br><span class="hljs-keyword">try</span> &#123;<br><span class="hljs-keyword">return</span> doPost(url, postContent, headers);<br>&#125; <span class="hljs-keyword">catch</span> (Exception e) &#123;<br><span class="hljs-keyword">if</span> (e != <span class="hljs-literal">null</span>)<br>ex = e;<br>tryTime++;<br>&#125;<br>&#125;<br><span class="hljs-keyword">if</span> (ex != <span class="hljs-literal">null</span>)<br><span class="hljs-keyword">throw</span> ex;<br><span class="hljs-keyword">else</span><br><span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Exception</span>(<span class="hljs-string">&quot;未知网络错误 &quot;</span>);<br>&#125;<br><br><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> String <span class="hljs-title function_">doPost</span><span class="hljs-params">(String strUrl, String postContent, Map&lt;String, String&gt; headers)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br><span class="hljs-type">HttpURLConnection</span> <span class="hljs-variable">connection</span> <span class="hljs-operator">=</span> <span class="hljs-literal">null</span>;<br><span class="hljs-type">InputStream</span> <span class="hljs-variable">stream</span> <span class="hljs-operator">=</span> <span class="hljs-literal">null</span>;<br><span class="hljs-keyword">try</span> &#123;<br>connection = getConnection(strUrl);<br>configConnection(connection);<br><span class="hljs-keyword">if</span> (headers != <span class="hljs-literal">null</span> &amp;&amp; headers.size() &gt; <span class="hljs-number">0</span>) &#123;<br><span class="hljs-keyword">for</span> (Map.Entry&lt;String, String&gt; entry : headers.entrySet()) &#123;<br>connection.setRequestProperty(entry.getKey(), entry.getValue());<br>&#125;<br>&#125;<br><br>connection.setRequestMethod(<span class="hljs-string">&quot;POST&quot;</span>);<br>connection.setDoOutput(<span class="hljs-literal">true</span>);<br><br><span class="hljs-keyword">if</span> (<span class="hljs-literal">null</span> != postContent &amp;&amp; !<span class="hljs-string">&quot;&quot;</span>.equals(postContent)) &#123;<br><span class="hljs-type">DataOutputStream</span> <span class="hljs-variable">dos</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">DataOutputStream</span>(connection.getOutputStream());<br>dos.write(postContent.getBytes(CHAR_SET));<br>dos.flush();<br>dos.close();<br>&#125;<br>stream = connection.getInputStream();<br><span class="hljs-type">ByteArrayOutputStream</span> <span class="hljs-variable">obs</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ByteArrayOutputStream</span>();<br><br><span class="hljs-type">byte</span>[] buffer = <span class="hljs-keyword">new</span> <span class="hljs-title class_">byte</span>[<span class="hljs-number">1024</span>];<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">len</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; (len = stream.read(buffer)) &gt; <span class="hljs-number">0</span>;) &#123;<br>obs.write(buffer, <span class="hljs-number">0</span>, len);<br>&#125;<br>obs.flush();<br>obs.close();<br><br><span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">String</span>(obs.toByteArray());<br><br>&#125; <span class="hljs-keyword">finally</span> &#123;<br><span class="hljs-keyword">if</span> (connection != <span class="hljs-literal">null</span>) &#123;<br>connection.disconnect();<br>&#125;<br><span class="hljs-keyword">if</span> (stream != <span class="hljs-literal">null</span>) &#123;<br>stream.close();<br>&#125;<br>&#125;<br><br>&#125;<br><br><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">configConnection</span><span class="hljs-params">(HttpURLConnection connection)</span> &#123;<br><span class="hljs-keyword">if</span> (connection == <span class="hljs-literal">null</span>)<br><span class="hljs-keyword">return</span>;<br>connection.setReadTimeout(mReadTimeOut);<br>connection.setConnectTimeout(mConnectTimeOut);<br><br>connection.setRequestProperty(<span class="hljs-string">&quot;Content-Type&quot;</span>, <span class="hljs-string">&quot;application/x-www-form-urlencoded&quot;</span>);<br>connection.setRequestProperty(<span class="hljs-string">&quot;User-Agent&quot;</span>,<br><span class="hljs-string">&quot;Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/33.0.1750.146 Safari/537.36&quot;</span>);<br>&#125;<br><br><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> HttpURLConnection <span class="hljs-title function_">getConnection</span><span class="hljs-params">(String strUrl)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br><span class="hljs-keyword">if</span> (strUrl == <span class="hljs-literal">null</span>) &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>&#125;<br><span class="hljs-keyword">if</span> (strUrl.toLowerCase().startsWith(<span class="hljs-string">&quot;https&quot;</span>)) &#123;<br><span class="hljs-keyword">try</span> &#123;<br><span class="hljs-keyword">return</span> getHttpsConnection(strUrl);<br>&#125; <span class="hljs-keyword">catch</span> (Exception e) &#123;<br>e.printStackTrace();<br>&#125;<br><span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>&#125; <span class="hljs-keyword">else</span> &#123;<br><span class="hljs-keyword">return</span> getHttpConnection(strUrl);<br>&#125;<br>&#125;<br><br><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> HttpURLConnection <span class="hljs-title function_">getHttpConnection</span><span class="hljs-params">(String urlStr)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br><span class="hljs-type">URL</span> <span class="hljs-variable">url</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">URL</span>(urlStr);<br><span class="hljs-type">HttpURLConnection</span> <span class="hljs-variable">conn</span> <span class="hljs-operator">=</span> (HttpURLConnection) url.openConnection();<br><span class="hljs-keyword">return</span> conn;<br>&#125;<br><br><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> HttpsURLConnection <span class="hljs-title function_">getHttpsConnection</span><span class="hljs-params">(String urlStr)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br><span class="hljs-type">URL</span> <span class="hljs-variable">url</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">URL</span>(urlStr);<br><span class="hljs-type">HttpsURLConnection</span> <span class="hljs-variable">conn</span> <span class="hljs-operator">=</span> (HttpsURLConnection) url.openConnection();<br>conn.setHostnameVerifier(hnv);<br><span class="hljs-type">SSLContext</span> <span class="hljs-variable">sslContext</span> <span class="hljs-operator">=</span> SSLContext.getInstance(<span class="hljs-string">&quot;SSL&quot;</span>, <span class="hljs-string">&quot;SunJSSE&quot;</span>);<br><span class="hljs-keyword">if</span> (sslContext != <span class="hljs-literal">null</span>) &#123;<br>TrustManager[] tm = &#123; xtm &#125;;<br>sslContext.init(<span class="hljs-literal">null</span>, tm, <span class="hljs-literal">null</span>);<br><span class="hljs-type">SSLSocketFactory</span> <span class="hljs-variable">ssf</span> <span class="hljs-operator">=</span> sslContext.getSocketFactory();<br>conn.setSSLSocketFactory(ssf);<br>&#125;<br><br><span class="hljs-keyword">return</span> conn;<br>&#125;<br><br><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-type">X509TrustManager</span> <span class="hljs-variable">xtm</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">X509TrustManager</span>() &#123;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">checkClientTrusted</span><span class="hljs-params">(X509Certificate[] chain, String authType)</span> &#123;<br>&#125;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">checkServerTrusted</span><span class="hljs-params">(X509Certificate[] chain, String authType)</span> &#123;<br>&#125;<br><br><span class="hljs-keyword">public</span> X509Certificate[] getAcceptedIssuers() &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>&#125;<br>&#125;;<br><br><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-type">HostnameVerifier</span> <span class="hljs-variable">hnv</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">HostnameVerifier</span>() &#123;<br><span class="hljs-keyword">public</span> <span class="hljs-type">boolean</span> <span class="hljs-title function_">verify</span><span class="hljs-params">(String hostname, SSLSession session)</span> &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>&#125;<br>&#125;;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> String <span class="hljs-title function_">urlEncode</span><span class="hljs-params">(String str, String charset)</span> <span class="hljs-keyword">throws</span> UnsupportedEncodingException &#123;<br><span class="hljs-type">Pattern</span> <span class="hljs-variable">pattern</span> <span class="hljs-operator">=</span> Pattern.compile(<span class="hljs-string">&quot;[\u4e00-\u9fa5]+&quot;</span>);<br><span class="hljs-type">Matcher</span> <span class="hljs-variable">mathcer</span> <span class="hljs-operator">=</span> pattern.matcher(str);<br><span class="hljs-type">StringBuffer</span> <span class="hljs-variable">buffer</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">StringBuffer</span>();<br><span class="hljs-keyword">while</span> (mathcer.find()) &#123;<br>mathcer.appendReplacement(buffer, URLEncoder.encode(mathcer.group(<span class="hljs-number">0</span>), charset));<br>&#125;<br>mathcer.appendTail(buffer);<br><span class="hljs-keyword">return</span> buffer.toString();<br>&#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><p>个人感觉用起来还是很不错的，能覆盖大多数的请求场景吧，毕竟是别人封装好的了，拿来用就行了！</p>]]></content>
    
    
    <categories>
      
      <category>JAVA</category>
      
    </categories>
    
    
    <tags>
      
      <tag>工具</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>freemaker常用语法</title>
    <link href="/2022/05/28/freemaker%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95/"/>
    <url>/2022/05/28/freemaker%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<p>在公司新接到一个模块的开发需求，当时睡页面用的freemaker，当时也是头顶一蒙啊，同事说和jstl的用法差不多，但是在常用的东西上的写法确实还是不会，所以在这总结些常用的语法！望指正！</p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><code class="hljs dust"><span class="language-xml"><span class="hljs-comment">&lt;!-- 此时name的值就是后台传过来的值直接填写就可以--&gt;</span></span><br><span class="language-xml">&lt;#if name = 0&gt;</span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">name</span> =<span class="hljs-string">&quot;idCard&quot;</span>&gt;</span></span><br><span class="language-xml">&lt;/#if&gt;</span><br><span class="language-xml">=================================================================</span><br><span class="language-xml"><span class="hljs-comment">&lt;!--接收参数采用$</span></span><span class="hljs-template-variable">&#123;&#125;</span><span class="language-xml"><span class="hljs-comment">的方式去接收--&gt;</span></span><br><span class="language-xml"><span class="hljs-comment">&lt;!--这里的??表示可以为空--&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">name</span> =<span class="hljs-string">&quot;idCard&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;$</span></span></span><span class="hljs-template-variable">&#123;user??&#125;</span><span class="language-xml"><span class="hljs-tag"><span class="hljs-string">&quot;</span>&gt;</span></span><br><span class="language-xml">=================================================================</span><br><span class="language-xml"><span class="hljs-comment">&lt;!--list就等同于for循环，userlist表示为后台传过来的集合，as 后的user表示遍历时的临时变量--&gt;</span></span><br><span class="language-xml">&lt;#list userlist as user&gt;</span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">ul</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;u-list-box&quot;</span>&gt;</span> </span><br><span class="language-xml">            <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;u-list&quot;</span>&gt;</span></span><br><span class="language-xml">                <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;&quot;</span>&gt;</span>机主姓名:<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span></span><br><span class="language-xml">                <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>$</span><span class="hljs-template-variable">&#123;user.userName&#125;</span><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span></span><br><span class="language-xml">            <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span></span><br><span class="language-xml">  &lt;/#list&gt;</span><br><span class="language-xml">=================================================================</span><br><span class="language-xml">&lt;#list userlist as user&gt;</span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">ul</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;u-list-box&quot;</span>&gt;</span> </span><br><span class="language-xml">            <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;u-list&quot;</span>&gt;</span></span><br><span class="language-xml">                <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;&quot;</span>&gt;</span>机主姓名:<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span></span><br><span class="language-xml">                <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>$</span><span class="hljs-template-variable">&#123;user.userName&#125;</span><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span></span><br><span class="language-xml">            <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span></span><br><span class="language-xml">  &lt;/#list&gt;</span><br><span class="language-xml">  <span class="hljs-comment">&lt;!--这里的user——index是下标序号--&gt;</span></span><br><span class="language-xml">  &lt;#if user_index = 0&gt;</span><br><span class="language-xml">  checked=&quot;checked&quot;</span><br><span class="language-xml">  &lt;/#if&gt;</span><br><span class="language-xml">=================================================================</span><br><span class="language-xml"><span class="hljs-comment">&lt;!--遍历map--&gt;</span></span><br><span class="language-xml">&lt;#list map?keys as k&gt;</span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">option</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;$</span></span></span><span class="hljs-template-variable">&#123;k&#125;</span><span class="language-xml"><span class="hljs-tag"><span class="hljs-string">&quot;</span>&gt;</span>$</span><span class="hljs-template-variable">&#123;map[k]&#125;</span><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span></span><br><span class="language-xml">&lt;/#list&gt;</span><br><span class="language-xml">=================================================================</span><br><span class="language-xml"><span class="hljs-comment">&lt;!--取LIST中第i个元素的值--&gt;</span></span><br><span class="language-xml">$</span><span class="hljs-template-variable">&#123;list[i]&#125;</span><span class="language-xml"> </span><br><span class="language-xml"><span class="hljs-comment">&lt;!--嵌套时前面要有括号，如下，将字符串变成list，然后取第i个元素的值--&gt;</span></span><br><span class="language-xml">$</span><span class="hljs-template-variable">&#123;(str?split(&quot;,&quot;))[i]&#125;</span><span class="language-xml"> </span><br><span class="language-xml">=================================================================</span><br><span class="language-xml"><span class="hljs-comment">&lt;!--list排序：--&gt;</span></span><br><span class="language-xml">升序 .sort_by()</span><br><span class="language-xml">&lt;#list list?sort_by(&quot;字段&quot;) as x&gt;</span><br><span class="language-xml">&lt;/#list&gt;</span><br><span class="language-xml">降序 .sort_by()?reverse</span><br><span class="language-xml">&lt;#list list?sort_by(&quot;字段&quot;)?reverse as x&gt; </span><br><span class="language-xml">&lt;/#list&gt;</span><br><span class="language-xml">=================================================================</span><br><span class="language-xml"><span class="hljs-comment">&lt;!--item_has_next,size使用：--&gt;</span></span><br><span class="language-xml">&lt;#list userList as user&gt;</span><br><span class="language-xml">  &lt;#if !user_has_next&gt;</span><br><span class="language-xml">   共有$</span><span class="hljs-template-variable">&#123;userList?size&#125;</span><span class="language-xml">最后一个用户是:$</span><span class="hljs-template-variable">&#123;user.userName&#125;</span><span class="language-xml"></span><br><span class="language-xml">  &lt;/#if&gt;</span><br><span class="language-xml">&lt;/#list&gt;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>JAVA</category>
      
    </categories>
    
    
    <tags>
      
      <tag>freemaker</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>MessageDigest简介及应用</title>
    <link href="/2022/05/28/MessageDigest%E7%AE%80%E4%BB%8B%E5%8F%8A%E5%BA%94%E7%94%A8/"/>
    <url>/2022/05/28/MessageDigest%E7%AE%80%E4%BB%8B%E5%8F%8A%E5%BA%94%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h3 id="1-简介"><a href="#1-简介" class="headerlink" title="1. 简介"></a>1. 简介</h3><p>java.security. MessageDigest 类用于为应用程序提供信息摘要算法的功能，如 MD5 或 SHA 算法。简单点说就是用于生成 散列码。 信息摘要是安全的单向哈希函数，它接收任意大小的数据，输出固定长度的哈希值。关于信息摘要和散列码请参照《 <a href="http://hubingforever.blog.163.com/blog/static/17104057920118981219705/">数字证书简介</a> 》</p><p>MessageDigest 通过其getInstance系列静态函数来进行实例化和初始化。MessageDigest 对象通过使用<code>update</code> 方法处理数据。任何时候都可以调用 <code>reset</code>方法重置摘要。一旦所有需要更新的数据都已经被更新了，应该调用 <code>digest</code>方法之一完成哈希计算并返回结果。</p><p>对于给定数量的更新数据，<code>digest</code> 方法只能被调用一次。<code>digest</code> 方法被调用后，MessageDigest 对象被重新设置成其初始状态。</p><p>MessageDigest 的实现可随意选择是否实现 Cloneable 接口。客户端应用程可以通过尝试复制和捕获 CloneNotSupportedException 测试可复制性：</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs abnf">MessageDigest md <span class="hljs-operator">=</span> MessageDigest.getInstance(<span class="hljs-string">&quot;SHA-256&quot;</span>)<span class="hljs-comment">;</span><br> <br>  try &#123;<br>      md.update(toChapter1)<span class="hljs-comment">;</span><br>      MessageDigest tc1 <span class="hljs-operator">=</span> md.clone()<span class="hljs-comment">;</span><br>      byte[] toChapter1Digest <span class="hljs-operator">=</span> tc1.digest()<span class="hljs-comment">;</span><br>      md.update(toChapter2)<span class="hljs-comment">;</span><br>      ...etc.<br>  &#125; catch (CloneNotSupportedException cnse) &#123;<br>      throw new DigestException(<span class="hljs-string">&quot;couldn&#x27;t make digest of partial content&quot;</span>)<span class="hljs-comment">;</span><br>  &#125;<br>Copy<br></code></pre></td></tr></table></figure><blockquote><p>注意：</p><ol><li>如果给定的实现是不可克隆的，那么仍然可以通过实例化几个实例来计算中间摘要(如果摘要的数量事先知道的话)。</li><li>由于历史原因，这个类是抽象的，从MessageDigestSpi继承而来。应用程序开发人员应该只注意这个MessageDigest类中定义的方法;超类中的所有方法都是为希望提供自己的消息摘要算法实现的加密服务提供者提供的。</li><li>MessageDigest并不是单实例的。如下代码所示：</li></ol></blockquote><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs reasonml"><span class="hljs-keyword">try</span>&#123;<br><br>    MessageDigest mdTemp1 = <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">MessageDigest</span>.</span></span>get<span class="hljs-constructor">Instance(<span class="hljs-string">&quot;MD5&quot;</span>)</span>;<br><br>    MessageDigest mdTemp2= <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">MessageDigest</span>.</span></span>get<span class="hljs-constructor">Instance(<span class="hljs-string">&quot;MD5&quot;</span>)</span>;<br><br>    MessageDigest mdTemp3= <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">MessageDigest</span>.</span></span>get<span class="hljs-constructor">Instance(<span class="hljs-string">&quot;MD5&quot;</span>)</span>;<br><br>    <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">System</span>.</span></span>out.println(<span class="hljs-string">&quot;mdTemp1==mdTemp2?:&quot;</span>+(mdTemp1==mdTemp2));<br><br>    <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">System</span>.</span></span>out.println(<span class="hljs-string">&quot;mdTemp2==mdTemp3?:&quot;</span>+(mdTemp2==mdTemp3));<br><br>&#125; catch (NoSuchAlgorithmException e)&#123;<br><br>    <span class="hljs-comment">// TODO Auto-generated catch block</span><br><br>    e.print<span class="hljs-constructor">StackTrace()</span>;<br><br>&#125;<br>Copy<br></code></pre></td></tr></table></figure><p>运行结果</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-attribute">mdTemp1</span>==mdTemp2?:false<br><span class="hljs-attribute">mdTemp2</span>==mdTemp3?:false<br>Copy<br></code></pre></td></tr></table></figure><p>以上为jdk中的翻译和网上找来的翻译结果。</p><h3 id="2-使用MD5方法进行加密"><a href="#2-使用MD5方法进行加密" class="headerlink" title="2. 使用MD5方法进行加密"></a>2. 使用MD5方法进行加密</h3><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 密码MD5</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> <span class="hljs-variable">wgp</span></span><br><span class="hljs-comment"> * <span class="hljs-doctag">@date</span> 2021/7/13 14:17</span><br><span class="hljs-comment"> */</span><br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Md5Utils</span> &#123;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-title class_">Logger</span> log = <span class="hljs-title class_">LoggerFactory</span>.<span class="hljs-title function_">getLogger</span>(<span class="hljs-title class_">Md5Utils</span>.<span class="hljs-property">class</span>);<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * TODO base64EncodeMD5 使用MD5方法加密</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * 最终解码字符串的时候使用了base64去处理和直接转成String的方式没有什么区别</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@author</span> <span class="hljs-variable">wgp</span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@date</span> 2021/7/13 14:50</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> <span class="hljs-variable">str</span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span> java.lang.String</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-title class_">String</span> <span class="hljs-title function_">base64EncodeMD5</span>(<span class="hljs-params"><span class="hljs-built_in">String</span> str</span>) &#123;<br>        <span class="hljs-title class_">String</span> md5Str = <span class="hljs-literal">null</span>;<br>        <span class="hljs-keyword">try</span> &#123;<br>            <span class="hljs-title class_">MessageDigest</span> md5 = <span class="hljs-title class_">MessageDigest</span>.<span class="hljs-title function_">getInstance</span>(<span class="hljs-string">&quot;MD5&quot;</span>);<br>            <span class="hljs-title class_">BASE64Encoder</span> base64 = <span class="hljs-keyword">new</span> <span class="hljs-title class_">BASE64Encoder</span>();<br>            md5Str = base64.<span class="hljs-title function_">encode</span>(md5.<span class="hljs-title function_">digest</span>(str.<span class="hljs-title function_">getBytes</span>()));<br>            log.<span class="hljs-title function_">info</span>(<span class="hljs-string">&quot;【加密后的字符串：&quot;</span>+md5Str+<span class="hljs-string">&quot;】&quot;</span>);<br>        &#125; <span class="hljs-keyword">catch</span> (<span class="hljs-title class_">NoSuchAlgorithmException</span> e) &#123;<br>            log.<span class="hljs-title function_">error</span>(<span class="hljs-string">&quot;加密失败！&quot;</span>);<br>            e.<span class="hljs-title function_">printStackTrace</span>();<br>        &#125;<br>        <span class="hljs-keyword">return</span> md5Str;<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * TODO getMD5Str</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@author</span> <span class="hljs-variable">wgp</span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@date</span> 2021/7/13 15:33</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> <span class="hljs-variable">str</span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span> java.lang.String</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-title class_">String</span> <span class="hljs-title function_">getMD5Str</span>(<span class="hljs-params"><span class="hljs-built_in">String</span> str</span>) &#123;<br>        byte[] digest = <span class="hljs-literal">null</span>;<br>        <span class="hljs-keyword">try</span> &#123;<br>            <span class="hljs-comment">//获取md5 为基础的加密算法 jdk中提供的加密算法有三种 “md5”，“sha - 1”，“sha - 256”</span><br>            <span class="hljs-title class_">MessageDigest</span> md5 = <span class="hljs-title class_">MessageDigest</span>.<span class="hljs-title function_">getInstance</span>(<span class="hljs-string">&quot;md5&quot;</span>);<br>            <span class="hljs-comment">//入参为一个byte数组，所以按照utf-8的编码区转码</span><br>            <span class="hljs-comment">//由于返回的结果也是一个byte[]所以经由base64做解码处理</span><br>            digest  = md5.<span class="hljs-title function_">digest</span>(str.<span class="hljs-title function_">getBytes</span>(<span class="hljs-string">&quot;utf-8&quot;</span>));<br>        &#125; <span class="hljs-keyword">catch</span> (<span class="hljs-title class_">NoSuchAlgorithmException</span> e) &#123;<br>            e.<span class="hljs-title function_">printStackTrace</span>();<br>        &#125; <span class="hljs-keyword">catch</span> (<span class="hljs-title class_">UnsupportedEncodingException</span> e) &#123;<br>            e.<span class="hljs-title function_">printStackTrace</span>();<br>        &#125;<br>        <span class="hljs-comment">// digest()最后确定返回md5 hash值，返回值为8位字符串。因为md5 hash值是16位的hex值，实际上就是8位的字符</span><br>        <span class="hljs-comment">// BigInteger函数则将8位的字符串转换成16位hex值，用字符串来表示；得到字符串形式的hash值</span><br>        <span class="hljs-comment">//一个byte是八位二进制，也就是2位十六进制字符（2的8次方等于16的2次方）</span><br>        <span class="hljs-title class_">String</span> md5Str = <span class="hljs-keyword">new</span> <span class="hljs-title class_">BigInteger</span>(<span class="hljs-number">1</span>, digest).<span class="hljs-title function_">toString</span>(<span class="hljs-number">16</span>);<br>        log.<span class="hljs-title function_">info</span>(<span class="hljs-string">&quot;【加密后的字符串：&quot;</span>+md5Str+<span class="hljs-string">&quot;】&quot;</span>);<br>        <span class="hljs-keyword">return</span> md5Str;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-built_in">void</span> <span class="hljs-title function_">main</span>(<span class="hljs-params"><span class="hljs-built_in">String</span>[] args</span>) &#123;<br>        <span class="hljs-title class_">String</span> s = <span class="hljs-string">&quot;汪广平&quot;</span>;<br>        <span class="hljs-title class_">String</span> s1 = <span class="hljs-title function_">getMD5Str</span>(s);<br>        <span class="hljs-comment">//</span><br>        <span class="hljs-title class_">DigestUtils</span>.<span class="hljs-title function_">md5DigestAsHex</span>(<span class="hljs-string">&quot;1234&quot;</span>.<span class="hljs-title function_">getBytes</span>());<br>        <span class="hljs-title class_">System</span>.<span class="hljs-property">out</span>.<span class="hljs-title function_">println</span>(s1.<span class="hljs-title function_">length</span>());<br>    &#125;<br>&#125;<br><br><span class="hljs-title class_">Copy</span><br></code></pre></td></tr></table></figure><ul><li><code>md5.reset()</code> 此方法是清除之前的摘要，但是个人感觉能用到的机会应该回很少。</li><li><code>md5.update()</code>此方法是将想要进行加密的内容加入摘要，其实就是将加密的内容更新进去，一会再调用机密算法的时候回调用它</li><li><code>md5.digest()</code>此方法是将摘要中的内容按照指定算法进行加密</li><li>在实际项目应用中spring有封装好的类直接可以使用</li></ul><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs reasonml"><span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">DigestUtils</span>.</span></span>md5<span class="hljs-constructor">DigestAsHex(<span class="hljs-string">&quot;1234&quot;</span>.<span class="hljs-params">getBytes</span>()</span>);<br>Copy<br></code></pre></td></tr></table></figure><h3 id="3-使用SHA-1加密"><a href="#3-使用SHA-1加密" class="headerlink" title="3.使用SHA-1加密"></a>3.使用SHA-1加密</h3><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs reasonml"><span class="hljs-comment">/**</span><br><span class="hljs-comment">    * TODO shaEncode  SHA-1实现</span><br><span class="hljs-comment">    * @author wgp</span><br><span class="hljs-comment">    * @date 2021/7/13 15:46</span><br><span class="hljs-comment">    *</span><br><span class="hljs-comment">    * @param inStr</span><br><span class="hljs-comment">    * @return java.lang.String</span><br><span class="hljs-comment">    */</span><br>   public static String sha<span class="hljs-constructor">Encode(String <span class="hljs-params">inStr</span>)</span>&#123;<br>       MessageDigest sha = null;<br>       StringBuffer hexValue = null;<br>       <span class="hljs-keyword">try</span> &#123;<br>           sha = <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">MessageDigest</span>.</span></span>get<span class="hljs-constructor">Instance(<span class="hljs-string">&quot;SHA&quot;</span>)</span>;<br>           byte<span class="hljs-literal">[]</span> byteArray = inStr.get<span class="hljs-constructor">Bytes(<span class="hljs-string">&quot;UTF-8&quot;</span>)</span>;<br>           byte<span class="hljs-literal">[]</span> md5Bytes = sha.digest(byteArray);<br>           hexValue = <span class="hljs-keyword">new</span> <span class="hljs-constructor">StringBuffer()</span>;<br>           <span class="hljs-comment">//new BigInteger(1,md5Bytes).toString(16); 此处也可以用这个方法处理然后直接返回字符串</span><br>           <span class="hljs-keyword">for</span> (<span class="hljs-built_in">int</span> i = <span class="hljs-number">0</span>; i &lt; md5Bytes.length; i++) &#123;<br>               <span class="hljs-built_in">int</span> <span class="hljs-keyword">val</span> = ((<span class="hljs-built_in">int</span>) md5Bytes<span class="hljs-literal">[<span class="hljs-identifier">i</span>]</span>) &amp; <span class="hljs-number">0xff</span>;<br>               <span class="hljs-keyword">if</span> (<span class="hljs-keyword">val</span> &lt; <span class="hljs-number">16</span>) &#123;<br>                   hexValue.append(<span class="hljs-string">&quot;0&quot;</span>);<br>               &#125;<br>               hexValue.append(<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Integer</span>.</span></span><span class="hljs-keyword">to</span><span class="hljs-constructor">HexString(<span class="hljs-params">val</span>)</span>);<br>           &#125;<br>       &#125; catch (Exception e) &#123;<br>           log.info(e.<span class="hljs-keyword">to</span><span class="hljs-constructor">String()</span>);<br>           e.print<span class="hljs-constructor">StackTrace()</span>;<br>           return <span class="hljs-string">&quot;&quot;</span>;<br>       &#125;<br>       return hexValue.<span class="hljs-keyword">to</span><span class="hljs-constructor">String()</span>;<br>   &#125;<br>Copy<br></code></pre></td></tr></table></figure><ul><li>也可以引用org.apache.commons.codec.digest.DigestUtils，然后按照如下方法调用加密即可。</li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-title class_">String</span> <span class="hljs-title function_">encodePassword</span>(<span class="hljs-params"><span class="hljs-built_in">String</span> psw</span>) &#123;<br>    <span class="hljs-keyword">if</span>(<span class="hljs-title class_">StringUtils</span>.<span class="hljs-title function_">isEmpty</span>(psw))&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>    &#125;<span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-title class_">DigestUtils</span>.<span class="hljs-title function_">sha1Hex</span>(psw);<br>    &#125;<br>&#125; <br><span class="hljs-title class_">Copy</span><br></code></pre></td></tr></table></figure><h3 id="3-SHA-256-加密"><a href="#3-SHA-256-加密" class="headerlink" title="3. SHA-256 加密"></a>3. SHA-256 加密</h3><p>代码基本和sha-1的一致，但是这些都是最简单的写法，只是学习用的一个实现，后续复杂操作，大多都是通过第三方的包去完成的，但是我还没有学习到，后续在考虑去出一篇博客！</p>]]></content>
    
    
    <categories>
      
      <category>JAVA</category>
      
    </categories>
    
    
    <tags>
      
      <tag>加密</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>HttpClient的简单使用</title>
    <link href="/2022/05/28/HttpClient%E7%9A%84%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/"/>
    <url>/2022/05/28/HttpClient%E7%9A%84%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<p>&#x2F;**</p><ul><li><p>HttpKit<br> *&#x2F;<br>public class HttpKit {</p><p> private HttpKit() {}</p><p> &#x2F;**</p><ul><li>https 域名校验<br>  *&#x2F;<br> private static class TrustAnyHostnameVerifier implements HostnameVerifier {<br> public boolean verify(String hostname, SSLSession session) {<br> return true;<br> }<br> }</li></ul><p> &#x2F;**</p><ul><li>https 证书管理<br>  *&#x2F;<br> private static class TrustAnyTrustManager implements X509TrustManager {<br> public X509Certificate[] getAcceptedIssuers() {<br> return null;<br> }<br> public void checkClientTrusted(X509Certificate[] chain, String authType) throws CertificateException {<br> }<br> public void checkServerTrusted(X509Certificate[] chain, String authType) throws CertificateException {<br> }<br> }</li></ul><p> private static final String GET  &#x3D; “GET”;<br> private static final String POST &#x3D; “POST”;<br> private static String CHARSET &#x3D; “UTF-8”;</p><p> private static int connectTimeout &#x3D; 19000;&#x2F;&#x2F; 连接超时，单位毫秒<br> private static int readTimeout &#x3D; 19000;&#x2F;&#x2F; 读取超时，单位毫秒</p><p> private static final SSLSocketFactory sslSocketFactory &#x3D; initSSLSocketFactory();<br> private static final TrustAnyHostnameVerifier trustAnyHostnameVerifier &#x3D; new HttpKit.TrustAnyHostnameVerifier();</p><p> private static SSLSocketFactory initSSLSocketFactory() {<br>     try {<br>         TrustManager[] tm &#x3D; {new HttpKit.TrustAnyTrustManager() };<br>         SSLContext sslContext &#x3D; SSLContext.getInstance(“TLS”);&#x2F;&#x2F; (“TLS”, “SunJSSE”);<br>         sslContext.init(null, tm, new java.security.SecureRandom());<br>         return sslContext.getSocketFactory();<br>     }<br>     catch (Exception e) {<br>         throw new RuntimeException(e);<br>     }<br> }</p><p> public static void setCharSet(String charSet) {<br>     if (StrKit.isBlank(charSet)) {<br>         throw new IllegalArgumentException(“charSet can not be blank.”);<br>     }<br>     HttpKit.CHARSET &#x3D; charSet;<br> }</p><p> public static void setConnectTimeout(int connectTimeout) {<br>     HttpKit.connectTimeout &#x3D; connectTimeout;<br> }</p><p> public static void setReadTimeout(int readTimeout) {<br>     HttpKit.readTimeout &#x3D; readTimeout;<br> }</p><p> private static HttpURLConnection getHttpConnection(String url, String method, Map&lt;String, String&gt; headers) throws IOException, NoSuchAlgorithmException, NoSuchProviderException, KeyManagementException {<br>     URL _url &#x3D; new URL(url);<br>     HttpURLConnection conn &#x3D; (HttpURLConnection)_url.openConnection();<br>     if (conn instanceof HttpsURLConnection) {<br>         ((HttpsURLConnection)conn).setSSLSocketFactory(sslSocketFactory);<br>         ((HttpsURLConnection)conn).setHostnameVerifier(trustAnyHostnameVerifier);<br>     }</p><pre><code class="hljs"> conn.setRequestMethod(method); conn.setDoOutput(true); conn.setDoInput(true);  conn.setConnectTimeout(connectTimeout); conn.setReadTimeout(readTimeout);  conn.setRequestProperty(&quot;Content-Type&quot;,&quot;application/x-www-form-urlencoded&quot;); conn.setRequestProperty(&quot;User-Agent&quot;, &quot;Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/33.0.1750.146 Safari/537.36&quot;);  if (headers != null &amp;&amp; !headers.isEmpty()) &#123;     for (Entry&lt;String, String&gt; entry : headers.entrySet()) &#123;         conn.setRequestProperty(entry.getKey(), entry.getValue());     &#125; &#125;  return conn;</code></pre><p> }</p><p> &#x2F;**</p><ul><li>Send GET request<br>  *&#x2F;<br> public static String get(String url, Map&lt;String, String&gt; queryParas, Map&lt;String, String&gt; headers) {<br> HttpURLConnection conn &#x3D; null;<br> try {<br> conn &#x3D; getHttpConnection(buildUrlWithQueryString(url, queryParas), GET, headers);<br> conn.connect();<br> return readResponseString(conn);<br> }<br> catch (Exception e) {<br> throw new RuntimeException(e);<br> }<br> finally {<br> if (conn !&#x3D; null) {<br>     conn.disconnect();<br> }<br> }<br> }</li></ul><p> public static String get(String url, Map&lt;String, String&gt; queryParas) {<br>     return get(url, queryParas, null);<br> }</p><p> public static String get(String url) {<br>     return get(url, null, null);<br> }</p><p> &#x2F;**</p><ul><li>Send POST request<br>  *&#x2F;<br> public static String post(String url, Map&lt;String, String&gt; queryParas, String data, Map&lt;String, String&gt; headers) {<br> HttpURLConnection conn &#x3D; null;<br> try {<br> conn &#x3D; getHttpConnection(buildUrlWithQueryString(url, queryParas), POST, headers);<br> conn.connect();<br><br> if (data !&#x3D; null) {<br>     OutputStream out &#x3D; conn.getOutputStream();<br>     out.write(data.getBytes(CHARSET));<br>     out.flush();<br>     out.close();<br> }<br><br> return readResponseString(conn);<br> }<br> catch (Exception e) {<br> throw new RuntimeException(e);<br> }<br> finally {<br> if (conn !&#x3D; null) {<br>     conn.disconnect();<br> }<br> }</li></ul><p> }</p><p> public static String post(String url, Map&lt;String, String&gt; queryParas, String data) {<br>     return post(url, queryParas, data, null);<br> }</p><p> public static String post(String url, String data, Map&lt;String, String&gt; headers) {<br>     return post(url, null, data, headers);<br> }</p><p> public static String post(String url, String data) {<br>     return post(url, null, data, null);<br> }</p><p> private static String readResponseString(HttpURLConnection conn) {<br>     BufferedReader reader &#x3D; null;<br>     try {<br>         StringBuilder ret;<br>         reader &#x3D; new BufferedReader(new InputStreamReader(conn.getInputStream(), CHARSET));<br>         String line &#x3D; reader.readLine();<br>         if (line !&#x3D; null) {<br>             ret &#x3D; new StringBuilder();<br>             ret.append(line);<br>         } else {<br>             return “”;<br>         }</p><pre><code class="hljs">     while ((line = reader.readLine()) != null) &#123;         ret.append(&#39;\n&#39;).append(line);     &#125;     return ret.toString(); &#125; catch (Exception e) &#123;     throw new RuntimeException(e); &#125; finally &#123;     if (reader != null) &#123;         try &#123;             reader.close();         &#125; catch (IOException e) &#123;             LogKit.error(e.getMessage(), e);         &#125;     &#125; &#125;</code></pre><p> }</p><p> &#x2F;**</p><ul><li><p>Build queryString of the url<br>  *&#x2F;<br> private static String buildUrlWithQueryString(String url, Map&lt;String, String&gt; queryParas) {<br> if (queryParas &#x3D;&#x3D; null || queryParas.isEmpty()) {<br> return url;<br> }</p><p> StringBuilder sb &#x3D; new StringBuilder(url);<br> boolean isFirst;<br> if (url.indexOf(‘?’) &#x3D;&#x3D; -1) {<br> isFirst &#x3D; true;<br> sb.append(‘?’);<br> }<br> else {<br> isFirst &#x3D; false;<br> }</p><p> for (Entry&lt;String, String&gt; entry : queryParas.entrySet()) {<br> if (isFirst) {<br>     isFirst &#x3D; false;<br> } else {<br>     sb.append(‘&amp;’);<br> }<br><br> String key &#x3D; entry.getKey();<br> String value &#x3D; entry.getValue();<br> if (StrKit.notBlank(value)) {<br>     try {value &#x3D; URLEncoder.encode(value, CHARSET);} catch (UnsupportedEncodingException e) {throw new RuntimeException(e);}<br> }<br> sb.append(key).append(‘&#x3D;’).append(value);<br> }<br> return sb.toString();</p></li></ul><p> }</p><p> public static String readData(HttpServletRequest request) {<br>     BufferedReader br &#x3D; null;<br>     try {<br>         StringBuilder ret;<br>         br &#x3D; request.getReader();</p><pre><code class="hljs">     String line = br.readLine();     if (line != null) &#123;         ret = new StringBuilder();         ret.append(line);     &#125; else &#123;         return &quot;&quot;;     &#125;          while ((line = br.readLine()) != null) &#123;         ret.append(&#39;\n&#39;).append(line);     &#125;          return ret.toString(); &#125; catch (IOException e) &#123;     throw new RuntimeException(e); &#125; /* 去掉 close() 否则后续 ActionReporter 中的 getPara() 在部分 tomcat 中会报 IOException : Stream closed finally &#123;     if (br != null) &#123;         try &#123;br.close();&#125; catch (IOException e) &#123;LogKit.error(e.getMessage(), e);&#125;     &#125; &#125;*/</code></pre><p> }</p><p> @Deprecated<br> public static String readIncommingRequestData(HttpServletRequest request) {<br>     return readData(request);<br> }</p><p> &#x2F;**</p><ul><li>检测是否为 https 请求</li><li></li><li>nginx 代理实现 https 的场景，需要对 nginx 进行如下配置：</li><li><pre><code class="hljs">proxy_set_header X-Forwarded-Proto https;</code></pre></li><li>或者配置:</li><li><pre><code class="hljs">proxy_set_header X-Forwarded-Proto $scheme;</code></pre>  *&#x2F;<br> public static boolean isHttps(HttpServletRequest request) {<br> return  “https”.equalsIgnoreCase(request.getHeader(“X-Forwarded-Proto”))<br>     ||<br>     “https”.equalsIgnoreCase(request.getScheme());<br> }</li></ul></li></ul><p>}<br>Copy</p>]]></content>
    
    
    <categories>
      
      <category>JAVA</category>
      
    </categories>
    
    
    <tags>
      
      <tag>HttpClient</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SpringBoot接收参数的几种常用方式</title>
    <link href="/2022/05/28/SpringBoot%E6%8E%A5%E6%94%B6%E5%8F%82%E6%95%B0%E7%9A%84%E5%87%A0%E7%A7%8D%E5%B8%B8%E7%94%A8%E6%96%B9%E5%BC%8F/"/>
    <url>/2022/05/28/SpringBoot%E6%8E%A5%E6%94%B6%E5%8F%82%E6%95%B0%E7%9A%84%E5%87%A0%E7%A7%8D%E5%B8%B8%E7%94%A8%E6%96%B9%E5%BC%8F/</url>
    
    <content type="html"><![CDATA[<h1 id="第一类：请求路径参数"><a href="#第一类：请求路径参数" class="headerlink" title="第一类：请求路径参数"></a>第一类：请求路径参数</h1><h2 id="1、-PathVariable"><a href="#1、-PathVariable" class="headerlink" title="1、@PathVariable"></a>1、@PathVariable</h2><p>获取路径参数。即*url&#x2F;{id}*这种形式。</p><h2 id="2、-RequestParam"><a href="#2、-RequestParam" class="headerlink" title="2、@RequestParam"></a>2、@RequestParam</h2><p>获取查询参数。即*url?name&#x3D;*这种形式</p><h3 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h3><p>GET<br><a href="http://localhost:8080/demo/123?name=suki_rong">http://localhost:8080/demo/123?name=suki_rong</a><br>对应的java代码：</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs less"><span class="hljs-variable">@GetMapping</span>(<span class="hljs-string">&quot;/demo/&#123;id&#125;&quot;</span>)<br><span class="hljs-comment">//使用@PathVariable下边必须要配合@RequestParam 去使用</span><br>public void demo(<span class="hljs-variable">@PathVariable</span>(name = <span class="hljs-string">&quot;id&quot;</span>) String id, <span class="hljs-variable">@RequestParam</span>(name = <span class="hljs-string">&quot;name&quot;</span>) String name) &#123;<br>    <span class="hljs-selector-tag">System</span><span class="hljs-selector-class">.out</span><span class="hljs-selector-class">.println</span>(<span class="hljs-string">&quot;id=&quot;</span>+id);<br>    <span class="hljs-selector-tag">System</span><span class="hljs-selector-class">.out</span><span class="hljs-selector-class">.println</span>(<span class="hljs-string">&quot;name=&quot;</span>+name);<br>&#125;<br><span class="hljs-selector-tag">Copy</span><br></code></pre></td></tr></table></figure><p>输出结果：<br>id&#x3D;123<br>name&#x3D;suki_rong</p><h1 id="第二类：Body参数"><a href="#第二类：Body参数" class="headerlink" title="第二类：Body参数"></a>第二类：Body参数</h1><p>因为是POST请求，这里用Postman的截图结合代码说明</p><h2 id="1、-RequestBody"><a href="#1、-RequestBody" class="headerlink" title="1、@RequestBody"></a>1、@RequestBody</h2><h3 id="例子-1"><a href="#例子-1" class="headerlink" title="例子"></a>例子</h3><p>对应的java代码：</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs less"><span class="hljs-variable">@PostMapping</span>(path = <span class="hljs-string">&quot;/demo1&quot;</span>)<br>public void demo1(<span class="hljs-variable">@RequestBody</span> Person person) &#123;<br>    <span class="hljs-selector-tag">System</span><span class="hljs-selector-class">.out</span><span class="hljs-selector-class">.println</span>(person.toString());<br>&#125;<br><span class="hljs-selector-tag">Copy</span><br></code></pre></td></tr></table></figure><p>输出结果：<br>name:suki_rong;age&#x3D;18;hobby:programing</p><p>也可以是这样</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs less"><span class="hljs-variable">@PostMapping</span>(path = <span class="hljs-string">&quot;/demo1&quot;</span>)<br>public void demo1(<span class="hljs-variable">@RequestBody</span> Map&lt;String, String&gt; person) &#123;<br>    <span class="hljs-selector-tag">System</span><span class="hljs-selector-class">.out</span><span class="hljs-selector-class">.println</span>(person.get(<span class="hljs-string">&quot;name&quot;</span>));<br>&#125;<br><span class="hljs-selector-tag">Copy</span><br></code></pre></td></tr></table></figure><p>输出结果：<br>suki_rong</p><h2 id="2、无注解"><a href="#2、无注解" class="headerlink" title="2、无注解"></a>2、无注解</h2><h3 id="例子-2"><a href="#例子-2" class="headerlink" title="例子"></a>例子</h3><p>对应的java代码：</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">@PostMapping(<span class="hljs-type">path</span> = &quot;/demo2&quot;)<br><span class="hljs-built_in">public</span> <span class="hljs-type">void</span> demo2(Person person) &#123;<br>    <span class="hljs-keyword">System</span>.<span class="hljs-keyword">out</span>.println(person.toString());<br>&#125;<br><span class="hljs-keyword">Copy</span><br></code></pre></td></tr></table></figure><p>输出结果：<br>name:suki_rong;age&#x3D;18;hobby:programing</p><h2 id="Person类"><a href="#Person类" class="headerlink" title="Person类"></a>Person类</h2><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs arduino"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Person</span> &#123;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-type">long</span> id;<br>    <span class="hljs-keyword">private</span> <span class="hljs-type">String</span> name;<br>    <span class="hljs-keyword">private</span> <span class="hljs-type">int</span> age;<br>    <span class="hljs-keyword">private</span> <span class="hljs-type">String</span> hobby;<br><br>    @<span class="hljs-function">Override</span><br><span class="hljs-function">    <span class="hljs-keyword">public</span> <span class="hljs-type">String</span> <span class="hljs-title">toString</span><span class="hljs-params">()</span></span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;name:&quot;</span>+name+<span class="hljs-string">&quot;;age=&quot;</span>+age+<span class="hljs-string">&quot;;hobby:&quot;</span>+hobby;<br>    &#125;<br><br>    <span class="hljs-comment">// getters and setters</span><br>&#125;<br>Copy<br></code></pre></td></tr></table></figure><h1 id="第三类：请求头参数以及Cookie"><a href="#第三类：请求头参数以及Cookie" class="headerlink" title="第三类：请求头参数以及Cookie"></a>第三类：请求头参数以及Cookie</h1><h2 id="1、-RequestHeader"><a href="#1、-RequestHeader" class="headerlink" title="1、@RequestHeader"></a>1、@RequestHeader</h2><h2 id="2、-CookieValue"><a href="#2、-CookieValue" class="headerlink" title="2、@CookieValue"></a>2、@CookieValue</h2><h3 id="例子-3"><a href="#例子-3" class="headerlink" title="例子"></a>例子</h3><p>java代码：</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs less"><span class="hljs-variable">@GetMapping</span>(<span class="hljs-string">&quot;/demo3&quot;</span>)<br>public void demo3(<span class="hljs-variable">@RequestHeader</span>(name = <span class="hljs-string">&quot;myHeader&quot;</span>) String myHeader,<br>        <span class="hljs-variable">@CookieValue</span>(name = <span class="hljs-string">&quot;myCookie&quot;</span>) String myCookie) &#123;<br>    <span class="hljs-selector-tag">System</span><span class="hljs-selector-class">.out</span><span class="hljs-selector-class">.println</span>(<span class="hljs-string">&quot;myHeader=&quot;</span> + myHeader);<br>    <span class="hljs-selector-tag">System</span><span class="hljs-selector-class">.out</span><span class="hljs-selector-class">.println</span>(<span class="hljs-string">&quot;myCookie=&quot;</span> + myCookie);<br>&#125;<br><span class="hljs-selector-tag">Copy</span><br></code></pre></td></tr></table></figure><p>也可以这样</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">@<span class="hljs-constructor">GetMapping(<span class="hljs-string">&quot;/demo3&quot;</span>)</span><br>public void demo3(HttpServletRequest request) &#123;<br>    <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">System</span>.</span></span>out.println(request.get<span class="hljs-constructor">Header(<span class="hljs-string">&quot;myHeader&quot;</span>)</span>);<br>    <span class="hljs-keyword">for</span> (Cookie cookie : request.get<span class="hljs-constructor">Cookies()</span>) &#123;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-string">&quot;myCookie&quot;</span>.equals(cookie.get<span class="hljs-constructor">Name()</span>)) &#123;<br>            <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">System</span>.</span></span>out.println(cookie.get<span class="hljs-constructor">Value()</span>);<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Spring</category>
      
    </categories>
    
    
    <tags>
      
      <tag>SpringBoot</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>jdk8—LocalDateTime时间戳转换</title>
    <link href="/2022/05/28/jdk8%E2%80%94LocalDateTime%E6%97%B6%E9%97%B4%E6%88%B3%E8%BD%AC%E6%8D%A2/"/>
    <url>/2022/05/28/jdk8%E2%80%94LocalDateTime%E6%97%B6%E9%97%B4%E6%88%B3%E8%BD%AC%E6%8D%A2/</url>
    
    <content type="html"><![CDATA[<p>参照文章（ mysql查询时间段内数据）进行了操作。</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">    先来建表语句：<br>    <span class="hljs-keyword">SET</span> FOREIGN_KEY_CHECKS=<span class="hljs-number">0</span>;<br><br><span class="hljs-comment">-- ----------------------------</span><br><br><span class="hljs-comment">-- Table structure for t_user</span><br><br><span class="hljs-comment">-- ----------------------------</span><br><br><span class="hljs-keyword">DROP</span> <span class="hljs-keyword">TABLE</span> <span class="hljs-keyword">IF</span> <span class="hljs-keyword">EXISTS</span> `t_user`;<br><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> `t_user` (<br>  `userId` <span class="hljs-type">bigint</span>(<span class="hljs-number">20</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span>,<br>  `fullName` <span class="hljs-type">varchar</span>(<span class="hljs-number">64</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span>,<br>  `userType` <span class="hljs-type">varchar</span>(<span class="hljs-number">16</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span>,<br>  `addedTime` datetime <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span>,<br>  <span class="hljs-keyword">PRIMARY KEY</span> (`userId`)<br>) ENGINE=InnoDB <span class="hljs-keyword">DEFAULT</span> CHARSET=utf8;<br><br><span class="hljs-comment">-- ----------------------------</span><br><br><span class="hljs-comment">-- Records of t_user</span><br><br><span class="hljs-comment">-- ----------------------------</span><br><br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `t_user` <span class="hljs-keyword">VALUES</span> (<span class="hljs-string">&#x27;1&#x27;</span>, <span class="hljs-string">&#x27;爽爽&#x27;</span>, <span class="hljs-string">&#x27;普通&#x27;</span>, <span class="hljs-string">&#x27;2018-01-21 10:20:09&#x27;</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `t_user` <span class="hljs-keyword">VALUES</span> (<span class="hljs-string">&#x27;2&#x27;</span>, <span class="hljs-string">&#x27;贵贵&#x27;</span>, <span class="hljs-string">&#x27;普通&#x27;</span>, <span class="hljs-string">&#x27;2017-11-06 10:20:22&#x27;</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `t_user` <span class="hljs-keyword">VALUES</span> (<span class="hljs-string">&#x27;3&#x27;</span>, <span class="hljs-string">&#x27;芬芬&#x27;</span>, <span class="hljs-string">&#x27;vip&#x27;</span>, <span class="hljs-string">&#x27;2017-11-13 10:20:42&#x27;</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `t_user` <span class="hljs-keyword">VALUES</span> (<span class="hljs-string">&#x27;4&#x27;</span>, <span class="hljs-string">&#x27;思思&#x27;</span>, <span class="hljs-string">&#x27;vip&#x27;</span>, <span class="hljs-string">&#x27;2018-01-21 10:20:55&#x27;</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `t_user` <span class="hljs-keyword">VALUES</span> (<span class="hljs-string">&#x27;5&#x27;</span>, <span class="hljs-string">&#x27;妍妍&#x27;</span>, <span class="hljs-string">&#x27;vip&#x27;</span>, <span class="hljs-string">&#x27;2017-09-17 10:21:28&#x27;</span>);<br><br><br><br>    下面是<span class="hljs-keyword">sql</span>语句：<br><span class="hljs-comment">-- 今天  </span><br><span class="hljs-keyword">select</span> fullName,addedTime <span class="hljs-keyword">from</span> t_user <span class="hljs-keyword">where</span> to_days(addedTime) &lt;= to_days(now()); <br><span class="hljs-comment">-- 昨天  </span><br><span class="hljs-keyword">select</span> fullName,addedTime <span class="hljs-keyword">from</span> t_user <span class="hljs-keyword">where</span> to_days(NOW()) - TO_DAYS(addedTime) &lt;= <span class="hljs-number">1</span>;  <br><span class="hljs-comment">-- 近7天  </span><br><span class="hljs-keyword">select</span> fullName,addedTime <span class="hljs-keyword">from</span> t_user <span class="hljs-keyword">where</span> date_sub(CURDATE(),<span class="hljs-type">INTERVAL</span> <span class="hljs-number">7</span> DAY) &lt;= <span class="hljs-type">DATE</span>(addedTime);  <br><span class="hljs-comment">-- 近30天  </span><br><span class="hljs-keyword">SELECT</span> fullName,addedTime <span class="hljs-keyword">FROM</span> t_user <span class="hljs-keyword">where</span> DATE_SUB(CURDATE(), <span class="hljs-type">INTERVAL</span> <span class="hljs-number">30</span> DAY) &lt;= <span class="hljs-type">date</span>(addedTime);<br><span class="hljs-comment">-- 本月  </span><br><span class="hljs-keyword">SELECT</span> fullName,addedTime <span class="hljs-keyword">FROM</span> t_user <span class="hljs-keyword">WHERE</span> DATE_FORMAT( addedTime, <span class="hljs-string">&#x27;%Y%m&#x27;</span> ) = DATE_FORMAT( CURDATE() , <span class="hljs-string">&#x27;%Y%m&#x27;</span> );<br><span class="hljs-comment">-- 上一月  </span><br><span class="hljs-keyword">SELECT</span> fullName,addedTime <span class="hljs-keyword">FROM</span> t_user <span class="hljs-keyword">WHERE</span> PERIOD_DIFF( date_format( now( ) , <span class="hljs-string">&#x27;%Y%m&#x27;</span> ) , date_format( addedTime, <span class="hljs-string">&#x27;%Y%m&#x27;</span> ) ) =<span class="hljs-number">1</span>; <br><span class="hljs-comment">-- 查询本季度数据  </span><br><span class="hljs-keyword">select</span> fullName,addedTime <span class="hljs-keyword">FROM</span> t_user <span class="hljs-keyword">where</span> QUARTER(addedTime)=QUARTER(now()); <br><span class="hljs-comment">-- 查询上季度数据  </span><br><span class="hljs-keyword">select</span> fullName,addedTime <span class="hljs-keyword">FROM</span> t_user <span class="hljs-keyword">where</span> QUARTER(addedTime)=QUARTER(DATE_SUB(now(),<span class="hljs-type">interval</span> <span class="hljs-number">1</span> QUARTER));  <br><span class="hljs-comment">-- 查询本年数据  </span><br><span class="hljs-keyword">select</span> fullName,addedTime <span class="hljs-keyword">FROM</span> t_user <span class="hljs-keyword">where</span> YEAR(addedTime)=YEAR(NOW());  <br><span class="hljs-comment">-- 查询上年数据  </span><br><span class="hljs-keyword">select</span> fullName,addedTime <span class="hljs-keyword">FROM</span> t_user <span class="hljs-keyword">where</span> year(addedTime)=year(date_sub(now(),<span class="hljs-type">interval</span> <span class="hljs-number">1</span> year));  <br><span class="hljs-comment">-- 查询距离当前现在6个月的数据  </span><br><span class="hljs-keyword">select</span> fullName,addedTime <span class="hljs-keyword">FROM</span> t_user <span class="hljs-keyword">where</span> addedTime <span class="hljs-keyword">between</span> date_sub(now(),<span class="hljs-type">interval</span> <span class="hljs-number">6</span> month) <span class="hljs-keyword">and</span> now();  <br><br><span class="hljs-comment">-- 查询当前这周的数据  </span><br><span class="hljs-keyword">SELECT</span> fullName,addedTime <span class="hljs-keyword">FROM</span> t_user <span class="hljs-keyword">WHERE</span> YEARWEEK(date_format(addedTime,<span class="hljs-string">&#x27;%Y-%m-%d&#x27;</span>)) = YEARWEEK(now());  <br><span class="hljs-comment">-- 查询上周的数据  </span><br><span class="hljs-keyword">SELECT</span> fullName,addedTime <span class="hljs-keyword">FROM</span> t_user <span class="hljs-keyword">WHERE</span> YEARWEEK(date_format(addedTime,<span class="hljs-string">&#x27;%Y-%m-%d&#x27;</span>)) = YEARWEEK(now())<span class="hljs-number">-1</span>;  <br><span class="hljs-comment">-- 查询上个月的数据   </span><br><span class="hljs-keyword">select</span> fullName,addedTime <span class="hljs-keyword">FROM</span> t_user <span class="hljs-keyword">where</span> date_format(addedTime,<span class="hljs-string">&#x27;%Y-%m&#x27;</span>)=date_format(DATE_SUB(curdate(), <span class="hljs-type">INTERVAL</span> <span class="hljs-number">1</span> MONTH),<span class="hljs-string">&#x27;%Y-%m&#x27;</span>); <br><span class="hljs-comment">-- 查询当前月份的数据</span><br><span class="hljs-keyword">select</span> fullName,addedTime <span class="hljs-keyword">FROM</span> t_user <span class="hljs-keyword">where</span> DATE_FORMAT(addedTime,<span class="hljs-string">&#x27;%Y%m&#x27;</span>) = DATE_FORMAT(CURDATE(),<span class="hljs-string">&#x27;%Y%m&#x27;</span>);<br><span class="hljs-keyword">select</span> fullName,addedTime <span class="hljs-keyword">FROM</span> t_user <span class="hljs-keyword">where</span> date_format(addedTime,<span class="hljs-string">&#x27;%Y-%m&#x27;</span>)=date_format(now(),<span class="hljs-string">&#x27;%Y-%m&#x27;</span>); <br><br><span class="hljs-comment">-- 查询指定时间段的数据</span><br><span class="hljs-keyword">select</span> fullName,addedTime <span class="hljs-keyword">FROM</span> t_user <span class="hljs-keyword">where</span> addedTime <span class="hljs-keyword">between</span>  <span class="hljs-string">&#x27;2017-1-1 00:00:00&#x27;</span>  <span class="hljs-keyword">and</span> <span class="hljs-string">&#x27;2018-1-1 00:00:00&#x27;</span>;   <br><span class="hljs-keyword">select</span> fullName,addedTime <span class="hljs-keyword">FROM</span> t_user <span class="hljs-keyword">where</span> addedTime &gt;=<span class="hljs-string">&#x27;2017-1-1 00:00:00&#x27;</span>  <span class="hljs-keyword">and</span> addedTime &lt; <span class="hljs-string">&#x27;2018-1-1 00:00:00&#x27;</span>; <br><br><br><br>    归纳一下：<br>    <span class="hljs-number">1</span>、查询时间段内的数据，一般可以用<span class="hljs-keyword">between</span> <span class="hljs-keyword">and</span> 或 &lt;&gt; 来指定时间段。<br><br>    <span class="hljs-number">2</span>、mysql的时间字段类型有：datetime，<span class="hljs-type">timestamp</span>，<span class="hljs-type">date</span>，<span class="hljs-type">time</span>，year。<br><span class="hljs-keyword">Copy</span><br></code></pre></td></tr></table></figure><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs scss">   <span class="hljs-number">3</span>、 获取系统当前时间的函数：<br><br>    select <span class="hljs-built_in">CURDATE</span>();<br>    select <span class="hljs-built_in">NOW</span>();<br><br>    <span class="hljs-number">4</span>、获取时间差的函数：<br><br>    <span class="hljs-built_in">period_diff</span>()    <span class="hljs-built_in">datediff</span>(date1,date2)      <span class="hljs-built_in">timediff</span>(time1,time2)<br><br>   <span class="hljs-number">5</span>、日期加减函数：<br><br>    <span class="hljs-built_in">date_sub</span>() <br><br>    <span class="hljs-built_in">date_add</span>()     <span class="hljs-built_in">adddate</span>()      <span class="hljs-built_in">addtime</span>()<br><br>    <span class="hljs-built_in">period_add</span>(P,N)    <br><br>    --------以上参考文章（mysql日期加减）<br><br><br><br><br>    <span class="hljs-number">6</span>、时间格式转化函数：<br><br>    <span class="hljs-built_in">date_format</span>(date, format) ，MySQL日期格式化函数<span class="hljs-built_in">date_format</span>()<br>    <span class="hljs-built_in">unix_timestamp</span>() <br>    <span class="hljs-built_in">str_to_date</span>(str, format) <br>    <span class="hljs-built_in">from_unixtime</span>(unix_timestamp, format) ，MySQL时间戳格式化函数from_unixtime<br><br><br><br>    --------以上参考文章（MYSQL日期 字符串 时间戳互转）<br>Copy<br></code></pre></td></tr></table></figure><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">    顺带写一下oracle的查询语句：<br>    select<span class="hljs-operator"> * </span>from <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Oracle</span>.</span></span>alarmLog where alarmtime between <span class="hljs-keyword">to</span><span class="hljs-constructor">_date(&#x27;2007-03-03 18:00:00&#x27;,&#x27;<span class="hljs-params">yyyy</span>-<span class="hljs-params">mm</span>-<span class="hljs-params">dd</span> <span class="hljs-params">hh24</span>:<span class="hljs-params">mi</span>:<span class="hljs-params">ss</span>&#x27;)</span> <span class="hljs-keyword">and</span> <span class="hljs-keyword">to</span><span class="hljs-constructor">_date(&#x27;2007-09-04 18:00:00&#x27;,&#x27;<span class="hljs-params">yyyy</span>-<span class="hljs-params">mm</span>-<span class="hljs-params">dd</span> <span class="hljs-params">hh24</span>:<span class="hljs-params">mi</span>:<span class="hljs-params">ss</span>&#x27;)</span><br>Copy<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>分类</category>
      
    </categories>
    
    
    <tags>
      
      <tag>标签</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>mysql查询时间段数据</title>
    <link href="/2022/05/28/mysql%E6%9F%A5%E8%AF%A2%E6%97%B6%E9%97%B4%E6%AE%B5%E6%95%B0%E6%8D%AE/"/>
    <url>/2022/05/28/mysql%E6%9F%A5%E8%AF%A2%E6%97%B6%E9%97%B4%E6%AE%B5%E6%95%B0%E6%8D%AE/</url>
    
    <content type="html"><![CDATA[<p>参照文章（ mysql查询时间段内数据）进行了操作。</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">    先来建表语句：<br>    <span class="hljs-keyword">SET</span> FOREIGN_KEY_CHECKS=<span class="hljs-number">0</span>;<br><br><span class="hljs-comment">-- ----------------------------</span><br><br><span class="hljs-comment">-- Table structure for t_user</span><br><br><span class="hljs-comment">-- ----------------------------</span><br><br><span class="hljs-keyword">DROP</span> <span class="hljs-keyword">TABLE</span> <span class="hljs-keyword">IF</span> <span class="hljs-keyword">EXISTS</span> `t_user`;<br><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> `t_user` (<br>  `userId` <span class="hljs-type">bigint</span>(<span class="hljs-number">20</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span>,<br>  `fullName` <span class="hljs-type">varchar</span>(<span class="hljs-number">64</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span>,<br>  `userType` <span class="hljs-type">varchar</span>(<span class="hljs-number">16</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span>,<br>  `addedTime` datetime <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span>,<br>  <span class="hljs-keyword">PRIMARY KEY</span> (`userId`)<br>) ENGINE=InnoDB <span class="hljs-keyword">DEFAULT</span> CHARSET=utf8;<br><br><span class="hljs-comment">-- ----------------------------</span><br><br><span class="hljs-comment">-- Records of t_user</span><br><br><span class="hljs-comment">-- ----------------------------</span><br><br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `t_user` <span class="hljs-keyword">VALUES</span> (<span class="hljs-string">&#x27;1&#x27;</span>, <span class="hljs-string">&#x27;爽爽&#x27;</span>, <span class="hljs-string">&#x27;普通&#x27;</span>, <span class="hljs-string">&#x27;2018-01-21 10:20:09&#x27;</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `t_user` <span class="hljs-keyword">VALUES</span> (<span class="hljs-string">&#x27;2&#x27;</span>, <span class="hljs-string">&#x27;贵贵&#x27;</span>, <span class="hljs-string">&#x27;普通&#x27;</span>, <span class="hljs-string">&#x27;2017-11-06 10:20:22&#x27;</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `t_user` <span class="hljs-keyword">VALUES</span> (<span class="hljs-string">&#x27;3&#x27;</span>, <span class="hljs-string">&#x27;芬芬&#x27;</span>, <span class="hljs-string">&#x27;vip&#x27;</span>, <span class="hljs-string">&#x27;2017-11-13 10:20:42&#x27;</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `t_user` <span class="hljs-keyword">VALUES</span> (<span class="hljs-string">&#x27;4&#x27;</span>, <span class="hljs-string">&#x27;思思&#x27;</span>, <span class="hljs-string">&#x27;vip&#x27;</span>, <span class="hljs-string">&#x27;2018-01-21 10:20:55&#x27;</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `t_user` <span class="hljs-keyword">VALUES</span> (<span class="hljs-string">&#x27;5&#x27;</span>, <span class="hljs-string">&#x27;妍妍&#x27;</span>, <span class="hljs-string">&#x27;vip&#x27;</span>, <span class="hljs-string">&#x27;2017-09-17 10:21:28&#x27;</span>);<br><br><br><br>    下面是<span class="hljs-keyword">sql</span>语句：<br><span class="hljs-comment">-- 今天  </span><br><span class="hljs-keyword">select</span> fullName,addedTime <span class="hljs-keyword">from</span> t_user <span class="hljs-keyword">where</span> to_days(addedTime) &lt;= to_days(now()); <br><span class="hljs-comment">-- 昨天  </span><br><span class="hljs-keyword">select</span> fullName,addedTime <span class="hljs-keyword">from</span> t_user <span class="hljs-keyword">where</span> to_days(NOW()) - TO_DAYS(addedTime) &lt;= <span class="hljs-number">1</span>;  <br><span class="hljs-comment">-- 近7天  </span><br><span class="hljs-keyword">select</span> fullName,addedTime <span class="hljs-keyword">from</span> t_user <span class="hljs-keyword">where</span> date_sub(CURDATE(),<span class="hljs-type">INTERVAL</span> <span class="hljs-number">7</span> DAY) &lt;= <span class="hljs-type">DATE</span>(addedTime);  <br><span class="hljs-comment">-- 近30天  </span><br><span class="hljs-keyword">SELECT</span> fullName,addedTime <span class="hljs-keyword">FROM</span> t_user <span class="hljs-keyword">where</span> DATE_SUB(CURDATE(), <span class="hljs-type">INTERVAL</span> <span class="hljs-number">30</span> DAY) &lt;= <span class="hljs-type">date</span>(addedTime);<br><span class="hljs-comment">-- 本月  </span><br><span class="hljs-keyword">SELECT</span> fullName,addedTime <span class="hljs-keyword">FROM</span> t_user <span class="hljs-keyword">WHERE</span> DATE_FORMAT( addedTime, <span class="hljs-string">&#x27;%Y%m&#x27;</span> ) = DATE_FORMAT( CURDATE() , <span class="hljs-string">&#x27;%Y%m&#x27;</span> );<br><span class="hljs-comment">-- 上一月  </span><br><span class="hljs-keyword">SELECT</span> fullName,addedTime <span class="hljs-keyword">FROM</span> t_user <span class="hljs-keyword">WHERE</span> PERIOD_DIFF( date_format( now( ) , <span class="hljs-string">&#x27;%Y%m&#x27;</span> ) , date_format( addedTime, <span class="hljs-string">&#x27;%Y%m&#x27;</span> ) ) =<span class="hljs-number">1</span>; <br><span class="hljs-comment">-- 查询本季度数据  </span><br><span class="hljs-keyword">select</span> fullName,addedTime <span class="hljs-keyword">FROM</span> t_user <span class="hljs-keyword">where</span> QUARTER(addedTime)=QUARTER(now()); <br><span class="hljs-comment">-- 查询上季度数据  </span><br><span class="hljs-keyword">select</span> fullName,addedTime <span class="hljs-keyword">FROM</span> t_user <span class="hljs-keyword">where</span> QUARTER(addedTime)=QUARTER(DATE_SUB(now(),<span class="hljs-type">interval</span> <span class="hljs-number">1</span> QUARTER));  <br><span class="hljs-comment">-- 查询本年数据  </span><br><span class="hljs-keyword">select</span> fullName,addedTime <span class="hljs-keyword">FROM</span> t_user <span class="hljs-keyword">where</span> YEAR(addedTime)=YEAR(NOW());  <br><span class="hljs-comment">-- 查询上年数据  </span><br><span class="hljs-keyword">select</span> fullName,addedTime <span class="hljs-keyword">FROM</span> t_user <span class="hljs-keyword">where</span> year(addedTime)=year(date_sub(now(),<span class="hljs-type">interval</span> <span class="hljs-number">1</span> year));  <br><span class="hljs-comment">-- 查询距离当前现在6个月的数据  </span><br><span class="hljs-keyword">select</span> fullName,addedTime <span class="hljs-keyword">FROM</span> t_user <span class="hljs-keyword">where</span> addedTime <span class="hljs-keyword">between</span> date_sub(now(),<span class="hljs-type">interval</span> <span class="hljs-number">6</span> month) <span class="hljs-keyword">and</span> now();  <br><br><span class="hljs-comment">-- 查询当前这周的数据  </span><br><span class="hljs-keyword">SELECT</span> fullName,addedTime <span class="hljs-keyword">FROM</span> t_user <span class="hljs-keyword">WHERE</span> YEARWEEK(date_format(addedTime,<span class="hljs-string">&#x27;%Y-%m-%d&#x27;</span>)) = YEARWEEK(now());  <br><span class="hljs-comment">-- 查询上周的数据  </span><br><span class="hljs-keyword">SELECT</span> fullName,addedTime <span class="hljs-keyword">FROM</span> t_user <span class="hljs-keyword">WHERE</span> YEARWEEK(date_format(addedTime,<span class="hljs-string">&#x27;%Y-%m-%d&#x27;</span>)) = YEARWEEK(now())<span class="hljs-number">-1</span>;  <br><span class="hljs-comment">-- 查询上个月的数据   </span><br><span class="hljs-keyword">select</span> fullName,addedTime <span class="hljs-keyword">FROM</span> t_user <span class="hljs-keyword">where</span> date_format(addedTime,<span class="hljs-string">&#x27;%Y-%m&#x27;</span>)=date_format(DATE_SUB(curdate(), <span class="hljs-type">INTERVAL</span> <span class="hljs-number">1</span> MONTH),<span class="hljs-string">&#x27;%Y-%m&#x27;</span>); <br><span class="hljs-comment">-- 查询当前月份的数据</span><br><span class="hljs-keyword">select</span> fullName,addedTime <span class="hljs-keyword">FROM</span> t_user <span class="hljs-keyword">where</span> DATE_FORMAT(addedTime,<span class="hljs-string">&#x27;%Y%m&#x27;</span>) = DATE_FORMAT(CURDATE(),<span class="hljs-string">&#x27;%Y%m&#x27;</span>);<br><span class="hljs-keyword">select</span> fullName,addedTime <span class="hljs-keyword">FROM</span> t_user <span class="hljs-keyword">where</span> date_format(addedTime,<span class="hljs-string">&#x27;%Y-%m&#x27;</span>)=date_format(now(),<span class="hljs-string">&#x27;%Y-%m&#x27;</span>); <br><br><span class="hljs-comment">-- 查询指定时间段的数据</span><br><span class="hljs-keyword">select</span> fullName,addedTime <span class="hljs-keyword">FROM</span> t_user <span class="hljs-keyword">where</span> addedTime <span class="hljs-keyword">between</span>  <span class="hljs-string">&#x27;2017-1-1 00:00:00&#x27;</span>  <span class="hljs-keyword">and</span> <span class="hljs-string">&#x27;2018-1-1 00:00:00&#x27;</span>;   <br><span class="hljs-keyword">select</span> fullName,addedTime <span class="hljs-keyword">FROM</span> t_user <span class="hljs-keyword">where</span> addedTime &gt;=<span class="hljs-string">&#x27;2017-1-1 00:00:00&#x27;</span>  <span class="hljs-keyword">and</span> addedTime &lt; <span class="hljs-string">&#x27;2018-1-1 00:00:00&#x27;</span>; <br><br><br><br>    归纳一下：<br>    <span class="hljs-number">1</span>、查询时间段内的数据，一般可以用<span class="hljs-keyword">between</span> <span class="hljs-keyword">and</span> 或 &lt;&gt; 来指定时间段。<br><br>    <span class="hljs-number">2</span>、mysql的时间字段类型有：datetime，<span class="hljs-type">timestamp</span>，<span class="hljs-type">date</span>，<span class="hljs-type">time</span>，year。<br><span class="hljs-keyword">Copy</span><br></code></pre></td></tr></table></figure><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs scss">   <span class="hljs-number">3</span>、 获取系统当前时间的函数：<br><br>    select <span class="hljs-built_in">CURDATE</span>();<br>    select <span class="hljs-built_in">NOW</span>();<br><br>    <span class="hljs-number">4</span>、获取时间差的函数：<br><br>    <span class="hljs-built_in">period_diff</span>()    <span class="hljs-built_in">datediff</span>(date1,date2)      <span class="hljs-built_in">timediff</span>(time1,time2)<br><br>   <span class="hljs-number">5</span>、日期加减函数：<br><br>    <span class="hljs-built_in">date_sub</span>() <br><br>    <span class="hljs-built_in">date_add</span>()     <span class="hljs-built_in">adddate</span>()      <span class="hljs-built_in">addtime</span>()<br><br>    <span class="hljs-built_in">period_add</span>(P,N)    <br><br>    --------以上参考文章（mysql日期加减）<br><br><br><br><br>    <span class="hljs-number">6</span>、时间格式转化函数：<br><br>    <span class="hljs-built_in">date_format</span>(date, format) ，MySQL日期格式化函数<span class="hljs-built_in">date_format</span>()<br>    <span class="hljs-built_in">unix_timestamp</span>() <br>    <span class="hljs-built_in">str_to_date</span>(str, format) <br>    <span class="hljs-built_in">from_unixtime</span>(unix_timestamp, format) ，MySQL时间戳格式化函数from_unixtime<br><br><br><br>    --------以上参考文章（MYSQL日期 字符串 时间戳互转）<br>Copy<br></code></pre></td></tr></table></figure><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">    顺带写一下oracle的查询语句：<br>    select<span class="hljs-operator"> * </span>from <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Oracle</span>.</span></span>alarmLog where alarmtime between <span class="hljs-keyword">to</span><span class="hljs-constructor">_date(&#x27;2007-03-03 18:00:00&#x27;,&#x27;<span class="hljs-params">yyyy</span>-<span class="hljs-params">mm</span>-<span class="hljs-params">dd</span> <span class="hljs-params">hh24</span>:<span class="hljs-params">mi</span>:<span class="hljs-params">ss</span>&#x27;)</span> <span class="hljs-keyword">and</span> <span class="hljs-keyword">to</span><span class="hljs-constructor">_date(&#x27;2007-09-04 18:00:00&#x27;,&#x27;<span class="hljs-params">yyyy</span>-<span class="hljs-params">mm</span>-<span class="hljs-params">dd</span> <span class="hljs-params">hh24</span>:<span class="hljs-params">mi</span>:<span class="hljs-params">ss</span>&#x27;)</span><br>Copy<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>MySQL</category>
      
    </categories>
    
    
    <tags>
      
      <tag>MySQL</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>java时间的比较</title>
    <link href="/2022/05/28/java%E6%97%B6%E9%97%B4%E7%9A%84%E6%AF%94%E8%BE%83/"/>
    <url>/2022/05/28/java%E6%97%B6%E9%97%B4%E7%9A%84%E6%AF%94%E8%BE%83/</url>
    
    <content type="html"><![CDATA[<h3 id="java时间的比较"><a href="#java时间的比较" class="headerlink" title="java时间的比较"></a>java时间的比较</h3><figure class="highlight erlang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs erlang"><span class="hljs-number">1</span>. 直接用Date自带方法before()和<span class="hljs-keyword">after</span>()比较<br>Copy<br>//获取活动开始时间 <br>String <span class="hljs-keyword">begin</span>Time = new String(<span class="hljs-string">&quot;2020-12-11 00:00:00&quot;</span>); <br>//结束时间<br>String <span class="hljs-keyword">end</span>Time = new String(<span class="hljs-string">&quot;2020-12-26 00:00:00&quot;</span>);<br>Copy<br>//设置日期格式<br>SimpleDateFormat df = new SimpleDateFormat(<span class="hljs-string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span>);<br>//获取活动开始时间和截止时间精确到秒<br>Date sd1=df.parse(<span class="hljs-keyword">begin</span>Time);<br>Date sd2=df.parse(<span class="hljs-keyword">end</span>Time);<br><br>.compareTo()方法:前后时间一模一样时返回(前后时间相等时)<span class="hljs-literal">true</span>,否则返回<span class="hljs-literal">false</span>.<br>.<span class="hljs-keyword">after</span>()方法:当前面的时间晚于后面的时间时返回<span class="hljs-literal">true</span>,否则返回<span class="hljs-literal">false</span>.<br>例如:当前时间<span class="hljs-keyword">begin</span>Time，结束时间<span class="hljs-keyword">end</span>Time<br>此时:<span class="hljs-keyword">begin</span>Time.<span class="hljs-keyword">after</span>(<span class="hljs-keyword">end</span>Time )=<span class="hljs-literal">true</span><br><br>.before()方法:当前面的时间早于后面的时间时返回<span class="hljs-literal">true</span>,否则返回<span class="hljs-literal">false</span>.<br>例如:当前时间<span class="hljs-keyword">begin</span>Time 结束时间<span class="hljs-keyword">end</span>Time<br>此时:<span class="hljs-keyword">begin</span>Time.before(<span class="hljs-keyword">end</span>Time )=<span class="hljs-literal">true</span><br>Copy<br></code></pre></td></tr></table></figure><ul><li><p>java.util.Date中的before和after方法只会比较到Day，不管你的date是yyyy-MM-dd HH:mm:ss还是yyyy-MM-dd格式的。</p><ul><li>如果不是对上边的函数足够的了解的话，还是建议用gettime（）</li></ul><p>2.用getTime（）去比较时间</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs abnf">//获取活动开始时间 和 结束时间<br>String beginTime <span class="hljs-operator">=</span> new String(<span class="hljs-string">&quot;2020-12-11 00:00:00&quot;</span>)<span class="hljs-comment">; </span><br>String endTime <span class="hljs-operator">=</span> new String(<span class="hljs-string">&quot;2020-12-26 00:00:00&quot;</span>)<span class="hljs-comment">;</span><br>//设置日期格式<br>SimpleDateFormat df <span class="hljs-operator">=</span> new SimpleDateFormat(<span class="hljs-string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span>)<span class="hljs-comment">;</span><br>//获取活动开始时间和截止时间精确到秒<br>Date sd1<span class="hljs-operator">=</span>df.parse(beginTime)<span class="hljs-comment">;</span><br>Date sd2<span class="hljs-operator">=</span>df.parse(endTime)<span class="hljs-comment">;</span><br>//转换后的开始时间和结束时间<br>long startTime <span class="hljs-operator">=</span>sd1.getTime()<span class="hljs-comment">;</span><br>long overTime<span class="hljs-operator">=</span> sd2.getTime()<span class="hljs-comment">;</span><br></code></pre></td></tr></table></figure></li></ul>]]></content>
    
    
    <categories>
      
      <category>JAVA</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JAVA</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>FTPClient上传和下载</title>
    <link href="/2022/05/28/FTPClient%E4%B8%8A%E4%BC%A0%E5%92%8C%E4%B8%8B%E8%BD%BD/"/>
    <url>/2022/05/28/FTPClient%E4%B8%8A%E4%BC%A0%E5%92%8C%E4%B8%8B%E8%BD%BD/</url>
    
    <content type="html"><![CDATA[<h3 id="1-需要的包"><a href="#1-需要的包" class="headerlink" title="1.需要的包"></a>1.需要的包</h3><ul><li>org.apache.commons.net.ftp.FTPClient;</li></ul><h3 id="2-介绍"><a href="#2-介绍" class="headerlink" title="2.介绍"></a>2.介绍</h3><ul><li>此处使用到了<strong>递归</strong>的算法，然后去执行下载整个文件夹或者下载单个文件</li><li>程序自动递归下载指定目录下的所有文件及子文件夹，上传时，自动递归创建服务器目录</li><li>此处执行的代码逻辑是先下载图片和xls文件，其他类型的文件不予下载，然后再上传到另一个服务器上，然后再把本地的缓存路径删除！</li></ul><h3 id="3-代码"><a href="#3-代码" class="headerlink" title="3. 代码"></a>3. 代码</h3><ul><li>测试类</li></ul><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">public static void main(String<span class="hljs-literal">[]</span> args) &#123;<br>String sysDate = <span class="hljs-string">&quot;2021-02-23&quot;</span>;<br><span class="hljs-comment">//上传Ftp</span><br>FTPClient uploadClient = null;<br><span class="hljs-comment">//下载Ftp</span><br>FTPClient downClient = null;<br><br><span class="hljs-keyword">try</span> &#123;<br>downClient = <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">FtpUtil</span>.</span></span>connect<span class="hljs-constructor">FtpServer(<span class="hljs-string">&quot;39.100.247.387&quot;</span>, 21, <span class="hljs-string">&quot;upolad&quot;</span>, <span class="hljs-string">&quot;srdJ5RaWzJbjtRpw&quot;</span>,0)</span>;<br><span class="hljs-comment">//获取下载上传路径</span><br>String Dir = <span class="hljs-string">&quot;/bhpsftp/e_photo/real-xiaobai/2021-02-23&quot;</span>;<br>String<span class="hljs-literal">[]</span> types = &#123;<span class="hljs-string">&quot;.jpg&quot;</span>,<span class="hljs-string">&quot;.xls&quot;</span>,<span class="hljs-string">&quot;.xlsx&quot;</span>&#125;;<br>String local = <span class="hljs-string">&quot;D:\\temp\\real-xiaobai\\2021-02-23&quot;</span>;<br><span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">FtpUtil</span>.</span></span><span class="hljs-keyword">do</span><span class="hljs-constructor">Download(<span class="hljs-params">downClient</span>, Dir, <span class="hljs-params">local</span>, <span class="hljs-params">types</span>)</span>;<br><br><br><br>uploadClient = <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">FtpUtil</span>.</span></span>connect<span class="hljs-constructor">FtpServer(<span class="hljs-string">&quot;39.100.247.387&quot;</span>, 21, <span class="hljs-string">&quot;upolad&quot;</span>, <span class="hljs-string">&quot;srdJ5RaWzJbjtRpw&quot;</span>,0)</span>;<br><span class="hljs-comment">//获取文件上传路径</span><br>String uploadDir = <span class="hljs-string">&quot;/bhpsftp/e_photo/real-xiaobai/2021-02-23&quot;</span>;<br>File localFile = <span class="hljs-keyword">new</span> <span class="hljs-constructor">File(<span class="hljs-string">&quot;D:\\temp\\real-xiaobai\\2021-02-23&quot;</span>)</span>;<br>boolean makeFtpDirs = <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">FtpUtil</span>.</span></span>make<span class="hljs-constructor">FtpDirs(<span class="hljs-params">uploadClient</span>, <span class="hljs-params">uploadDir</span>)</span>;<br><span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">System</span>.</span></span>out.println(makeFtpDirs);<br><span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">System</span>.</span></span>out.println(uploadDir);<br><span class="hljs-comment">//上传所有文件</span><br><span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">FtpUtil</span>.</span></span><span class="hljs-keyword">do</span><span class="hljs-constructor">Upload(<span class="hljs-params">uploadClient</span>, <span class="hljs-params">uploadDir</span>, <span class="hljs-params">localFile</span>)</span>;<br><br>&#125; catch (Exception e) &#123;<br>            e.print<span class="hljs-constructor">StackTrace()</span>;<br>        &#125; finally &#123;<br>        <span class="hljs-keyword">try</span> &#123;<br><span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">FtpUtil</span>.</span></span>disconnect<span class="hljs-constructor">FtpServer(<span class="hljs-params">uploadClient</span>)</span>;<br><span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">FtpUtil</span>.</span></span>delete(<span class="hljs-keyword">new</span> <span class="hljs-constructor">File(<span class="hljs-string">&quot;D:\\temp\\/real-xinzhuang/2021-02-23&quot;</span>)</span>);<br>&#125; catch (Exception e) &#123;<br>e.print<span class="hljs-constructor">StackTrace()</span>;<br>&#125;<br>        &#125;<br><span class="hljs-comment">//</span><br>&#125;<br>Copy<br></code></pre></td></tr></table></figure><ul><li>Ftp工具类</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-type">Logger</span> <span class="hljs-variable">log</span> <span class="hljs-operator">=</span> LoggerFactory.getLogger(FtpUtil.class);<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> FTPClient <span class="hljs-title function_">connectFtpServer</span><span class="hljs-params">(String host, <span class="hljs-type">int</span> port,</span><br><span class="hljs-params">String username, String password)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br><span class="hljs-keyword">return</span> connectFtpServer(host, port, username, password, <span class="hljs-number">1</span>);<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> mode</span><br><span class="hljs-comment"> *            0,主动模式；1，被动模式</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span> ftp客户端</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> FTPClient <span class="hljs-title function_">connectFtpServer</span><span class="hljs-params">(String host, <span class="hljs-type">int</span> port,</span><br><span class="hljs-params">String username, String password, <span class="hljs-type">int</span> mode)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>log.info(<span class="hljs-string">&quot;ftp连接信息：ip[&quot;</span> + host + <span class="hljs-string">&quot;],port[&quot;</span> + port + <span class="hljs-string">&quot;],ftpUser[&quot;</span><br>+ username + <span class="hljs-string">&quot;],ftpPasswd[&quot;</span> + password + <span class="hljs-string">&quot;]&quot;</span>);<br><span class="hljs-type">FTPClient</span> <span class="hljs-variable">ftpClient</span> <span class="hljs-operator">=</span> <span class="hljs-literal">null</span>;<br><br>ftpClient = <span class="hljs-keyword">new</span> <span class="hljs-title class_">FTPClient</span>();<br>ftpClient.connect(host, port);<br>ftpClient.setControlEncoding(<span class="hljs-string">&quot;GBK&quot;</span>);<br><span class="hljs-keyword">if</span> (ftpClient.login(username, password)) &#123;<br>ftpClient.setFileType(FTPClient.BINARY_FILE_TYPE);<br><br><span class="hljs-comment">// 判断是否连接成功</span><br><span class="hljs-type">int</span> <span class="hljs-variable">reply</span> <span class="hljs-operator">=</span> ftpClient.getReplyCode();<br><span class="hljs-keyword">if</span> (!FTPReply.isPositiveCompletion(reply)) &#123;<br>ftpClient.disconnect();<br>log.error(<span class="hljs-string">&quot;ftp连接失败[服务器拒绝连接]&quot;</span>);<br><span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>&#125; <span class="hljs-keyword">else</span> &#123;<br><span class="hljs-keyword">if</span> (mode == <span class="hljs-number">0</span>) &#123;<br>ftpClient.enterLocalActiveMode();<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>ftpClient.enterLocalPassiveMode();<br>&#125;<br>&#125;<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>log.error(<span class="hljs-string">&quot;ftp连接失败[登录失败]&quot;</span>);<br><span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>&#125;<br><br><span class="hljs-keyword">return</span> ftpClient;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 判断是否连接</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-type">boolean</span> <span class="hljs-title function_">isConnected</span><span class="hljs-params">(FTPClient ftpClient)</span> &#123;<br><span class="hljs-keyword">if</span> (ftpClient.isConnected()) &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>&#125;<br><span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 断开与对方ftp服务的连接。</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">disconnectFtpServer</span><span class="hljs-params">(FTPClient ftpClient)</span><br><span class="hljs-keyword">throws</span> Exception &#123;<br><span class="hljs-keyword">if</span> (ftpClient != <span class="hljs-literal">null</span>) &#123;<br>ftpClient.logout();<br>ftpClient.disconnect();<br>&#125;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 判断给定的路径是文件还是文件夹</span><br><span class="hljs-comment"> * </span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> path</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment"> * <span class="hljs-doctag">@throws</span> IOException</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-type">boolean</span> <span class="hljs-title function_">isDirectory</span><span class="hljs-params">(FTPClient ftpClient, String path)</span><br><span class="hljs-keyword">throws</span> IOException &#123;<br><span class="hljs-keyword">if</span> (path.endsWith(<span class="hljs-string">&quot;.&quot;</span>)) &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>&#125;<br><span class="hljs-comment">// 如果是文件，就会返回false</span><br><span class="hljs-comment">// 如果文件夹或文件名中含有中文，这里要转换一下，不然会返回false</span><br><span class="hljs-keyword">return</span> ftpClient.changeWorkingDirectory(<span class="hljs-keyword">new</span> <span class="hljs-title class_">String</span>(path.getBytes(),<br><span class="hljs-string">&quot;ISO-8859-1&quot;</span>));<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 判断本地路径是否存在，不存在就创建路径</span><br><span class="hljs-comment"> * </span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> path</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">makeLocalDirs</span><span class="hljs-params">(String path)</span> &#123;<br><span class="hljs-type">File</span> <span class="hljs-variable">localFile</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">File</span>(path);<br><span class="hljs-keyword">if</span> (!localFile.exists()) &#123;<br>localFile.mkdirs();<br>&#125;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 对比路径下照片是否存在</span><br><span class="hljs-comment"> * </span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> path</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> String <span class="hljs-title function_">hasLocalFile</span><span class="hljs-params">(String path)</span> &#123;<br><span class="hljs-type">File</span> <span class="hljs-variable">localFile</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">File</span>(path);<br><span class="hljs-keyword">return</span> localFile.exists() ? <span class="hljs-string">&quot;1&quot;</span> : <span class="hljs-string">&quot;0&quot;</span>;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 下载单个文件</span><br><span class="hljs-comment"> * </span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> dir</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@throws</span> IOException</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-type">boolean</span> <span class="hljs-title function_">downloadFile</span><span class="hljs-params">(FTPClient ftpClient, String dir,</span><br><span class="hljs-params">String localPath)</span> &#123;<br><span class="hljs-type">boolean</span> <span class="hljs-variable">boo</span> <span class="hljs-operator">=</span> <span class="hljs-literal">false</span>;<br><span class="hljs-keyword">try</span> &#123;<br><span class="hljs-keyword">if</span> (!dir.endsWith(<span class="hljs-string">&quot;.&quot;</span>)) &#123;<br><span class="hljs-type">File</span> <span class="hljs-variable">file</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">File</span>(localPath);<br><span class="hljs-type">OutputStream</span> <span class="hljs-variable">os</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">FileOutputStream</span>(file);<br>ftpClient.setControlEncoding(<span class="hljs-string">&quot;UTF-8&quot;</span>);<br>ftpClient.setFileType(FTPClient.BINARY_FILE_TYPE);<br><span class="hljs-comment">// ftpClient.enterLocalPassiveMode();</span><br>boo = ftpClient.retrieveFile(<span class="hljs-keyword">new</span> <span class="hljs-title class_">String</span>(dir.getBytes(),<br><span class="hljs-string">&quot;ISO-8859-1&quot;</span>), os);<br>os.flush();<br>os.close();<br>&#125;<br><span class="hljs-keyword">return</span> boo;<br>&#125; <span class="hljs-keyword">catch</span> (Exception e) &#123;<br>e.printStackTrace();<br><span class="hljs-keyword">return</span> boo;<br>&#125;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 下载任务，递归调用，循环下载所有目录下的文件</span><br><span class="hljs-comment"> * </span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> path</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@throws</span> IOException</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">doDownload</span><span class="hljs-params">(FTPClient ftpClient, String path,</span><br><span class="hljs-params">String localPath, String[] types)</span> <span class="hljs-keyword">throws</span> IOException &#123;<br><span class="hljs-keyword">if</span> (!path.endsWith(<span class="hljs-string">&quot;.&quot;</span>) &amp;&amp; types != <span class="hljs-literal">null</span> &amp;&amp; types.length &gt; <span class="hljs-number">0</span>) &#123;<br><span class="hljs-comment">// 创建本地目录</span><br>makeLocalDirs(localPath);<br><span class="hljs-comment">// 切换工作目录</span><br>ftpClient.changeWorkingDirectory(<span class="hljs-keyword">new</span> <span class="hljs-title class_">String</span>(path.getBytes(),<br><span class="hljs-string">&quot;ISO-8859-1&quot;</span>));<br><span class="hljs-comment">// 获取目录下的文件列表</span><br>String[] fileNames = ftpClient.listNames();<br><span class="hljs-comment">// 循环下载FTP目录下的文件</span><br><span class="hljs-keyword">for</span> (String fname : fileNames) &#123;<br><span class="hljs-keyword">if</span> (isDirectory(ftpClient, path + <span class="hljs-string">&quot;/&quot;</span> + fname)) &#123;<br><span class="hljs-comment">// 递归调用</span><br>doDownload(ftpClient, path + <span class="hljs-string">&quot;/&quot;</span> + fname, localPath + <span class="hljs-string">&quot;/&quot;</span><br>+ fname, types);<br>&#125; <span class="hljs-keyword">else</span> &#123;<br><span class="hljs-keyword">for</span> (String type : types) &#123;<br><span class="hljs-keyword">if</span> (fname.endsWith(type)) &#123;<br>downloadFile(ftpClient, path + <span class="hljs-string">&quot;/&quot;</span> + fname,<br>localPath + <span class="hljs-string">&quot;/&quot;</span> + fname);<br>&#125;<br>&#125;<br>&#125;<br>&#125;<br>&#125;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 判断ftp文件夹是否存在 不存在就创建</span><br><span class="hljs-comment"> * </span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> ftpClient</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> path</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment"> * <span class="hljs-doctag">@throws</span> IOException</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-type">boolean</span> <span class="hljs-title function_">makeFtpDirs</span><span class="hljs-params">(FTPClient ftpClient, String path)</span><br><span class="hljs-keyword">throws</span> IOException &#123;<br> <span class="hljs-keyword">if</span> (!ftpClient.changeWorkingDirectory(path)) &#123;<br><span class="hljs-keyword">return</span> ftpClient.makeDirectory(path);<br>&#125;<br><span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 上传任务，递归调用，循环上传所有目录下的文件</span><br><span class="hljs-comment"> * </span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> ftpClient</span><br><span class="hljs-comment"> *            ftp对象</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> path</span><br><span class="hljs-comment"> *            ftp服务器上的路径</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> localPath</span><br><span class="hljs-comment"> *            本地存储路径</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> types</span><br><span class="hljs-comment"> *            文件类型</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@throws</span> IOException</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">doUpload</span><span class="hljs-params">(FTPClient ftpClient, String path, File localFile)</span><br><span class="hljs-keyword">throws</span> IOException &#123;<br><span class="hljs-keyword">if</span> (localFile.isDirectory()) &#123;<br><span class="hljs-keyword">for</span> (File ff : localFile.listFiles()) &#123;<br><span class="hljs-keyword">if</span> (ff.isDirectory()) &#123;<br>ftpClient.changeWorkingDirectory(path);<br><span class="hljs-keyword">if</span> (!ftpClient.changeWorkingDirectory(path + <span class="hljs-string">&quot;/&quot;</span><br>+ ff.getName())) &#123;<br>ftpClient.makeDirectory(ff.getName());<br>&#125;<br>doUpload(ftpClient, path + <span class="hljs-string">&quot;/&quot;</span> + ff.getName(), ff);<span class="hljs-comment">// 递归调用，传文件夹</span><br>&#125; <span class="hljs-keyword">else</span> &#123;<br>uploadFile(ftpClient, path, ff);<br>&#125;<br>&#125;<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>uploadFile(ftpClient, path, localFile);<br>&#125;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 单个文件上传</span><br><span class="hljs-comment"> * </span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> ftp</span><br><span class="hljs-comment"> *            ftp对象</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> remotePath</span><br><span class="hljs-comment"> *            目录</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> localFile</span><br><span class="hljs-comment"> *            文件对象</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment"> * <span class="hljs-doctag">@throws</span> IOException</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-type">boolean</span> <span class="hljs-title function_">uploadFile</span><span class="hljs-params">(FTPClient ftp, String remotePath,</span><br><span class="hljs-params">File localFile)</span>&#123;<br><span class="hljs-type">InputStream</span> <span class="hljs-variable">input</span> <span class="hljs-operator">=</span> <span class="hljs-literal">null</span>; <span class="hljs-comment">// 输入流</span><br><span class="hljs-keyword">try</span> &#123;<br>ftp.changeWorkingDirectory(remotePath);<br>input = <span class="hljs-keyword">new</span> <span class="hljs-title class_">FileInputStream</span>(localFile);<br><span class="hljs-keyword">return</span> ftp.storeFile(localFile.getName(),input);<br>&#125; <span class="hljs-keyword">catch</span> (IOException e) &#123;<br>e.printStackTrace();<br><span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>&#125; <span class="hljs-keyword">finally</span> &#123;<br><span class="hljs-keyword">try</span> &#123;<br><span class="hljs-keyword">if</span>(input != <span class="hljs-literal">null</span>)&#123;<br>input.close();<br>&#125;<br>&#125; <span class="hljs-keyword">catch</span> (IOException e) &#123;<br>e.printStackTrace();<br>&#125;<br>&#125;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 删除文件夹及文件夹下的文件</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> dir</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">delete</span><span class="hljs-params">(File dirFile)</span> &#123;<br><span class="hljs-keyword">if</span> (dirFile != <span class="hljs-literal">null</span> &amp;&amp; dirFile.exists()) &#123;<br> <span class="hljs-keyword">if</span>(dirFile.isDirectory())&#123;<br><span class="hljs-comment">// 删除文件夹中的所有文件包括子文件夹</span><br>File[] files = dirFile.listFiles();<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; i &lt; files.length; i++) &#123;<br><span class="hljs-keyword">if</span> (files[i].isDirectory()) &#123;<br>delete(files[i]);<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>files[i].delete();<br>&#125;<br>&#125;<br> &#125;<br> dirFile.delete();<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>JAVA</category>
      
    </categories>
    
    
    <tags>
      
      <tag>FTP</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>trunc函数用法</title>
    <link href="/2022/05/28/trunc%E5%87%BD%E6%95%B0%E7%94%A8%E6%B3%95/"/>
    <url>/2022/05/28/trunc%E5%87%BD%E6%95%B0%E7%94%A8%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<div class="note note-success">            <p>用于截取时间或者数值，返回指定的值 </p>          </div><h3 id="1、截取时间"><a href="#1、截取时间" class="headerlink" title="1、截取时间"></a>1、截取时间</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span>  trunc(to_date(<span class="hljs-string">&#x27;2018-02-01 1:00:00&#x27;</span>,<span class="hljs-string">&#x27;YYYY-MM-DD HH:MI:SS&#x27;</span>),<span class="hljs-string">&#x27;yyyy&#x27;</span>) <span class="hljs-keyword">from</span>   dual ;<span class="hljs-comment">--返回当年第一天</span><br><span class="hljs-keyword">select</span>  trunc(to_date(<span class="hljs-string">&#x27;2018-02-01 1:00:00&#x27;</span>,<span class="hljs-string">&#x27;YYYY-MM-DD HH:MI:SS&#x27;</span>),<span class="hljs-string">&#x27;mm&#x27;</span>) <span class="hljs-keyword">from</span>   dual ; <span class="hljs-comment">--返回当月第一天</span><br><span class="hljs-keyword">select</span>  trunc(to_date(<span class="hljs-string">&#x27;2018-02-01 1:00:00&#x27;</span>,<span class="hljs-string">&#x27;YYYY-MM-DD HH:MI:SS&#x27;</span>),<span class="hljs-string">&#x27;dd&#x27;</span>) <span class="hljs-keyword">from</span>   dual ;<span class="hljs-comment">--返回当前年月</span><br><span class="hljs-keyword">select</span>  trunc(to_date(<span class="hljs-string">&#x27;2018-02-01 1:00:00&#x27;</span>,<span class="hljs-string">&#x27;YYYY-MM-DD HH:MI:SS&#x27;</span>),<span class="hljs-string">&#x27;d&#x27;</span>) <span class="hljs-keyword">from</span>   dual ; <span class="hljs-comment">--返回当前星期的第一天(星期日) </span><br><span class="hljs-keyword">select</span>  trunc(to_date(<span class="hljs-string">&#x27;2018-02-01 1:12:12&#x27;</span>,<span class="hljs-string">&#x27;YYYY-MM-DD HH:MI:SS&#x27;</span>),<span class="hljs-string">&#x27;hh&#x27;</span>) <span class="hljs-keyword">from</span>   dual ;<span class="hljs-comment">--返回当前日期截取到小时,分秒补0</span><br><span class="hljs-keyword">select</span>  trunc(to_date(<span class="hljs-string">&#x27;2018-02-01 1:12:12&#x27;</span>,<span class="hljs-string">&#x27;YYYY-MM-DD HH:MI:SS&#x27;</span>),<span class="hljs-string">&#x27;mi&#x27;</span>) <span class="hljs-keyword">from</span>   dual ;<span class="hljs-comment">--返回当前日期截取到分,秒补0</span><br></code></pre></td></tr></table></figure><h3 id="2、截取数值"><a href="#2、截取数值" class="headerlink" title="2、截取数值"></a>2、截取数值</h3><p>语法：trunc(number,decimals)<br>number:指需要截取的数字</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span>  trunc(<span class="hljs-number">122.555</span>) <span class="hljs-keyword">from</span>  dual t; <span class="hljs-comment">--默认取整</span><br><span class="hljs-keyword">select</span>  trunc(<span class="hljs-number">122.555</span>,<span class="hljs-number">2</span>) <span class="hljs-keyword">from</span>  dual t;<br><span class="hljs-keyword">select</span>  trunc(<span class="hljs-number">122.555</span>,<span class="hljs-number">-2</span>) <span class="hljs-keyword">from</span>  dual t;<span class="hljs-comment">--负数表示从小数点左边开始截取2位</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Orcale</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Orcale</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Orcale创建用户和表空间授权过程</title>
    <link href="/2022/05/28/Orcale%E5%88%9B%E5%BB%BA%E7%94%A8%E6%88%B7%E5%92%8C%E8%A1%A8%E7%A9%BA%E9%97%B4%E6%8E%88%E6%9D%83%E8%BF%87%E7%A8%8B/"/>
    <url>/2022/05/28/Orcale%E5%88%9B%E5%BB%BA%E7%94%A8%E6%88%B7%E5%92%8C%E8%A1%A8%E7%A9%BA%E9%97%B4%E6%8E%88%E6%9D%83%E8%BF%87%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<h3 id="Orcale创建用户之前要先创建表空间"><a href="#Orcale创建用户之前要先创建表空间" class="headerlink" title="Orcale创建用户之前要先创建表空间"></a>Orcale创建用户之前要先创建表空间</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-operator">/</span><span class="hljs-operator">/</span>创建表空间<br><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span>space 表空间名 datafile <span class="hljs-string">&#x27;表空间路径\表空间名.dbf&#x27;&#x27; size 1000m;</span><br><span class="hljs-string"></span><br><span class="hljs-string">//创建用户</span><br><span class="hljs-string">create user 用户名 identified by 密码 default tablespace 表空间名 quota 500m on users;</span><br><span class="hljs-string"></span><br><span class="hljs-string">//给用户授权</span><br><span class="hljs-string">grant all privileges to 用户名;</span><br></code></pre></td></tr></table></figure><p>除了上方还有分别授权的方法</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sql">授权<br><span class="hljs-keyword">grant</span> <span class="hljs-keyword">create</span> session <span class="hljs-keyword">to</span> 用户名;<br><span class="hljs-keyword">grant</span> <span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> <span class="hljs-keyword">to</span>  用户名;<br><span class="hljs-keyword">grant</span> <span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span>space <span class="hljs-keyword">to</span>  用户名;<br><span class="hljs-keyword">grant</span> <span class="hljs-keyword">create</span> <span class="hljs-keyword">view</span> <span class="hljs-keyword">to</span>  用户名;<br></code></pre></td></tr></table></figure><h3 id="Oralce的特殊权限"><a href="#Oralce的特殊权限" class="headerlink" title="Oralce的特殊权限"></a>Oralce的特殊权限</h3><ol><li><p>系统权限unlimited tablespace是隐含在dba, resource角色中的一个系统权限. 当用户得到dba或resource的角色时, unlimited tablespace系统权限也隐式受权给用户.</p></li><li><p>系统权限unlimited tablespace不能被授予role, 可以被授予用户.</p></li><li><p>系统权限unlimited tablespace不会随着resource, dba被授予role而授予给用户</p><h3 id="特殊角色"><a href="#特殊角色" class="headerlink" title="特殊角色"></a>特殊角色</h3></li><li><p>DBA角色，是授权数据库管理员的权限</p></li><li><p>CONNECT角色， 是授予最终用户的典型权利，最基本的 一个（CREATE SESSION）</p></li><li><p>RESOURCE角色，是授予开发人员的 默认有八个权限（CREATE SEQUENCE,CREATE TRIGGER,CREATE CLUSTER,CREATE PROCEDURE,CREATE TYPE,CREATE OPERATOR,CREATE TABLE,CREATE INDEXTYPE）</p></li><li><p>exp_full_database角色，拥有导出数据库的权限</p></li><li><p>imp_full_database角色，拥有导入数据库的权限</p><h3 id="用户授权示"><a href="#用户授权示" class="headerlink" title="用户授权示"></a>用户授权示</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">--授权</span><br><span class="hljs-keyword">GRANT</span><br><span class="hljs-keyword">CONNECT</span>,                <br>RESOURCE,               <br><span class="hljs-comment">--DBA,                  </span><br><span class="hljs-comment">--unlimited tablespace,</span><br><span class="hljs-keyword">CREATE</span>  SESSION,         <br><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">ANY</span> SEQUENCE,     <br><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">ANY</span> <span class="hljs-keyword">TABLE</span>,        <br><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">ANY</span> <span class="hljs-keyword">VIEW</span> ,        <br><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">ANY</span> INDEX,        <br><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">ANY</span> <span class="hljs-keyword">PROCEDURE</span>,    <br><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">ANY</span> DIRECTORY,    <br><span class="hljs-keyword">ALTER</span>  SESSION, <br><span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">ANY</span> SEQUENCE,     <br><span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">ANY</span> <span class="hljs-keyword">TABLE</span>,        <br><span class="hljs-comment">--ALTER ANY VIEW ,        --不能修改视图</span><br><span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">ANY</span> INDEX,        <br><span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">ANY</span> <span class="hljs-keyword">PROCEDURE</span>,    <br><span class="hljs-comment">--ALTER ANY DIRECTORY,    --不能修改目录</span><br><span class="hljs-comment">--DROP  SESSION,       --不能删除Session</span><br><span class="hljs-keyword">DROP</span> <span class="hljs-keyword">ANY</span> SEQUENCE,     <br><span class="hljs-keyword">DROP</span> <span class="hljs-keyword">ANY</span> <span class="hljs-keyword">TABLE</span>,        <br><span class="hljs-keyword">DROP</span> <span class="hljs-keyword">ANY</span> <span class="hljs-keyword">VIEW</span> ,        <br><span class="hljs-keyword">DROP</span> <span class="hljs-keyword">ANY</span> INDEX,        <br><span class="hljs-keyword">DROP</span> <span class="hljs-keyword">ANY</span> <span class="hljs-keyword">PROCEDURE</span>,    <br><span class="hljs-keyword">DROP</span> <span class="hljs-keyword">ANY</span> DIRECTORY,    <br><span class="hljs-keyword">SELECT</span> <span class="hljs-keyword">ANY</span> <span class="hljs-keyword">TABLE</span>, <br><span class="hljs-keyword">SELECT</span> <span class="hljs-keyword">ANY</span> DICTIONARY,<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">ANY</span> <span class="hljs-keyword">TABLE</span>, <br><span class="hljs-keyword">UPDATE</span> <span class="hljs-keyword">ANY</span> <span class="hljs-keyword">TABLE</span>, <br><span class="hljs-keyword">DELETE</span> <span class="hljs-keyword">ANY</span> <span class="hljs-keyword">TABLE</span>,<br>DEBUG <span class="hljs-keyword">ANY</span> <span class="hljs-keyword">PROCEDURE</span>,<br>DEBUG <span class="hljs-keyword">CONNECT</span> SESSION,<br>exp_full_database,  <br>imp_full_database     <br><span class="hljs-keyword">TO</span> xcj01;<br></code></pre></td></tr></table></figure><h4 id="修改密码："><a href="#修改密码：" class="headerlink" title="修改密码："></a>修改密码：</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">alter</span> <span class="hljs-keyword">user</span> xcj01<br>identified <span class="hljs-keyword">by</span> xcj01;<br></code></pre></td></tr></table></figure><h4 id="删除用户以及跟用户关联的对象："><a href="#删除用户以及跟用户关联的对象：" class="headerlink" title="删除用户以及跟用户关联的对象："></a>删除用户以及跟用户关联的对象：</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">drop</span> <span class="hljs-keyword">user</span> xcj01 CASCADE;<br></code></pre></td></tr></table></figure><h4 id="查询用户权限和角色"><a href="#查询用户权限和角色" class="headerlink" title="查询用户权限和角色"></a>查询用户权限和角色</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> dba_role_privs a <span class="hljs-keyword">where</span> a.grantee<span class="hljs-operator">=</span><span class="hljs-string">&#x27;XCJ01&#x27;</span>;<br><span class="hljs-comment">--或</span><br><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> dba_sys_privs a <span class="hljs-keyword">where</span> a.grantee<span class="hljs-operator">=</span><span class="hljs-string">&#x27;XCJ01&#x27;</span>;<br></code></pre></td></tr></table></figure><h4 id="查看用户拥有哪些权限"><a href="#查看用户拥有哪些权限" class="headerlink" title="查看用户拥有哪些权限"></a>查看用户拥有哪些权限</h4></li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> ROLE, PRIVILEGE <span class="hljs-keyword">from</span> role_sys_privs <span class="hljs-keyword">where</span> role<span class="hljs-operator">=</span><span class="hljs-string">&#x27;RESOURCE&#x27;</span>;   <span class="hljs-comment">--RESOURCE，CONNECT，DBA</span><br><span class="hljs-comment">--或 </span><br><span class="hljs-keyword">select</span> grantee,privilege <span class="hljs-keyword">from</span> dba_sys_privs <span class="hljs-keyword">where</span> grantee<span class="hljs-operator">=</span><span class="hljs-string">&#x27;RESOURCE&#x27;</span>;<br></code></pre></td></tr></table></figure><h4 id="为用户取消角色"><a href="#为用户取消角色" class="headerlink" title="为用户取消角色"></a>为用户取消角色</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">revoke</span> resource <span class="hljs-keyword">from</span> XCJ01;<br></code></pre></td></tr></table></figure><h4 id="为用户取消权限"><a href="#为用户取消权限" class="headerlink" title="为用户取消权限"></a>为用户取消权限</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">revoke</span> unlimited tablespace <span class="hljs-keyword">from</span> XCJ01;<br></code></pre></td></tr></table></figure><h4 id="最后附加一个非常有用的技巧：查看Oracle的版本号。"><a href="#最后附加一个非常有用的技巧：查看Oracle的版本号。" class="headerlink" title="最后附加一个非常有用的技巧：查看Oracle的版本号。"></a>最后附加一个非常有用的技巧：查看Oracle的版本号。</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> v$version <span class="hljs-keyword">where</span> rownum <span class="hljs-operator">&lt;=</span><span class="hljs-number">1</span>; <br></code></pre></td></tr></table></figure><h4 id="orcale更改表空间名称"><a href="#orcale更改表空间名称" class="headerlink" title="orcale更改表空间名称"></a>orcale更改表空间名称</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">alter</span> <span class="hljs-keyword">table</span>space 原空间名 rename <span class="hljs-keyword">to</span> 新空间名;<br><br><br><span class="hljs-comment">-- 查询全部表空间名</span><br><span class="hljs-keyword">select</span> name <span class="hljs-keyword">from</span> v$tablespace;<br></code></pre></td></tr></table></figure><h4 id="查看表空间路径"><a href="#查看表空间路径" class="headerlink" title="查看表空间路径"></a>查看表空间路径</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> file_name , tablespace_name <span class="hljs-keyword">from</span> dba_data_files;<br><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> dba_data_files;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Orcale</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Orcale</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>时光札记</title>
    <link href="/2022/05/28/sgzj/"/>
    <url>/2022/05/28/sgzj/</url>
    
    <content type="html"><![CDATA[<div class="note note-success">            <p>创建之初 </p>          </div><p>最开始做这个博客的时候大约是再去年的时候，但是当时是再CSDN上为了记录一些自己再学习软件开发时记录的笔记和要点的，但是再和弟弟显摆的时候呢，弟弟给我来了个更高端的，发现这个真的时好看到爆炸，关键还是自己的这个引发了我的好奇心，打算也弄一个，但是事与愿违，好多的东西都是似懂非懂，所以左后的成品也是一塌糊涂，也就搁置了，直到前一段时间发现这个东西还是有自己的会好一些，所以趁着业余的时间就又搞起来了，之前也是再学习软件开发的时候老师说的开发人员应该要有一个自己的博客去记录学习和报错的，所以当初创建博客的初心记录东西时小部分去显摆才是大部分，但是再这次创建的时候，我尝试着发布些笔记，陆陆续续的有些笔记上线，发现这个东西真的是越来越有意思。</p><div class="note note-success">            <p>札记之初 </p>          </div><p>之前只是感觉这个上班发布了一些学习的笔记啥的就足够了，但是再今天的时候突然发现其实自己有些小牢骚，小想法也是可以再这个里边去说的呀，所以就创建了这么一个分类——时光札记，本来是看了弟弟的博客，他在记录生活琐事的时候用的叫结绳记事，本想一并照抄，因为感觉这四个字很有深意又那么浅显易懂，为此还特意查了下百度，结绳记事和自己想的到底是不是一会事，网上的解释是：“指远古时代人类，摆脱时空限制记录事实、进行传播的一种手段之一”，这时才发现他取得这个名字是多么的额贴切，但是本着自己那点小虚荣心再作祟，最终还是取了一个自己想要的名字，前四后想最后词汇匮乏，搞出来这么个词，但是也还不错，就是不咋接地气。</p><div class="note note-success">            <p>博客之初 </p>          </div><p>起初的时候，也没想搞这么复杂，弄个博客，一开始的时候只是想把自己的这些笔记有地方存，就寻思直接做个gitbook得了，但是结果发现这个gitbook其实原理上和博客差不多这么一想，还是直接弄个博客吧，关键是还能显摆，但是用过一段时间之后你就会发现这个东西的魅力所在，工作了一天累的要死，你有一百个牢骚要去发，但是你一想回家之后是在家足足等了你一天的老婆和孩子，这时真的不想把这些影响心情的东西带回家，因为这样对他们不公平，但是又想一吐为快，所以这倒是成了一个合适的好地方，生活的点点滴滴组成了这里，柴米油盐变成了生活必然，人生百态又不能一下看破，记录时光组成札记，生活里所有的愉快与不愉快终将变成各个文字，去警醒自己，记录生活，这些记录痕迹就组成了时光，去感悟时光，去记录时光——时光札记</p>]]></content>
    
    
    <categories>
      
      <category>时光札记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>时光札记</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
